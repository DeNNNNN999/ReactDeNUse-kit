{"version":3,"sources":["../src/hooks/useVirtualList.ts","../src/hooks/useDeepMemo.ts","../src/hooks/useStateWithHistory.ts","../src/hooks/useUndo.ts","../src/hooks/useReducerWithMiddleware.ts","../src/hooks/useWebSocket.ts","../src/hooks/useSSE.ts","../src/hooks/usePolling.ts","../src/hooks/useAsync.ts","../src/hooks/useFetch.ts","../src/hooks/useMeasure.ts","../src/hooks/useScrollLock.ts","../src/hooks/useClickAway.ts","../src/hooks/useOnClickOutside.ts","../src/hooks/useHover.ts","../src/hooks/useIntersectionObserver.ts","../src/hooks/useWindowSize.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useEventListener.ts","../src/hooks/useDebounce.ts","../src/hooks/useThrottle.ts","../src/hooks/useToggle.ts","../src/hooks/useCounter.ts","../src/hooks/useTimeout.ts","../src/hooks/useInterval.ts","../src/hooks/useLocalStorage.ts","../src/hooks/usePrevious.ts","../src/hooks/useKeyPress.ts","../src/hooks/useIsFirstRender.ts","../src/hooks/useUpdateEffect.ts"],"names":["useVirtualList","items","containerHeight","options","itemHeight","overscan","estimatedItemHeight","getItemKey","onScroll","scrollThreshold","onEndReached","scrollTop","setScrollTop","useState","isScrolling","setIsScrolling","scrollTimeoutRef","useRef","containerRef","heightCacheRef","lastEndReachedRef","getItemHeight","useCallback","index","cached","height","startIndex","endIndex","virtualItems","totalHeight","useMemo","accumulatedHeight","startIdx","endIdx","i","totalH","vItems","itemTop","isVisible","useEffect","scrollProgress","handleScroll","e","target","newScrollTop","scrollToIndex","behavior","align","targetTop","itemH","deepEqual","a","b","key","value","aArray","bArray","item","bItem","keys","useDeepMemo","factory","deps","ref","useDeepCompareMemoize","useStateWithHistory","initialValue","maxHistorySize","includePresent","setValueInternal","historyRef","historyIndexRef","forceUpdate","setValue","newValue","resolvedValue","newHistory","undo","redo","goTo","clear","reset","resetValue","history","undoReducer","state","action","previous","next","newFuture","useUndo","maxHistory","dispatch","useReducer","trimmedState","useReducerWithMiddleware","reducer","initialState","middlewares","baseDispatch","stateRef","store","dispatchChain","middleware","loggerMiddleware","result","thunkMiddleware","devtoolsMiddleware","devtools","devtoolsInstance","createAsyncMiddleware","type","payload","error","useWebSocket","url","reconnect","reconnectAttempts","reconnectInterval","manual","onOpen","onClose","onMessage","onError","onReconnectStop","shouldReconnect","protocols","retryOnError","filter","heartbeat","readyState","setReadyState","lastMessage","setLastMessage","lastJsonMessage","setLastJsonMessage","messageHistory","setMessageHistory","reconnectCount","setReconnectCount","ws","reconnectTimer","heartbeatTimer","pongTimer","reconnectCountRef","unmountedRef","getUrl","startHeartbeat","message","interval","pongTimeout","sendPing","pingMessage","stopHeartbeat","connect","wsUrl","event","prev","jsonData","disconnect","code","reason","sendMessage","sendJsonMessage","useSSE","withCredentials","events","eventSourceOptions","data","setData","setError","eventHistory","setEventHistory","eventSource","sseUrl","parsedData","eventName","usePolling","onSuccess","maxRetries","retryDelay","enabled","immediate","stopOnError","stopCondition","cache","cacheTime","headers","method","body","signal","loading","setLoading","isPolling","setIsPolling","lastUpdate","setLastUpdate","pollCount","setPollCount","pollingTimer","retryCount","cacheRef","abortController","fetchData","fetchSignal","fetchUrl","response","responseData","stop","err","start","poll","retry","useAsync","asyncFunction","setState","execute","useFetch","abortControllerRef","defaultDimensions","useMeasure","debounce","scroll","resize","offsetSize","dimensions","setDimensions","node","setNode","observerRef","rafRef","timeoutRef","measure","rect","newDimensions","prevDimensions","measureWithDebounce","newNode","entries","handleResize","IS_SERVER","useScrollLock","autoLock","lockTarget","preserveScrollBarGap","scrollBarWidth","targetElement","originalStyles","isLockedRef","getScrollBarWidth","outer","inner","scrollbarWidth","getTargetElement","lock","hasScrollbar","currentPaddingRight","unlock","toggle","useClickAway","onClickAway","handleClick","useOnClickOutside","handler","listener","useHover","isHovering","setIsHovering","handleMouseEnter","handleMouseLeave","element","useIntersectionObserver","entry","setEntry","observer","useWindowSize","windowSize","setWindowSize","useMediaQuery","query","matches","setMatches","mediaQuery","handleChange","useEventListener","savedHandler","eventListener","useDebounce","delay","debouncedValue","setDebouncedValue","useThrottle","limit","throttledValue","setThrottledValue","lastRan","useToggle","v","useCounter","count","setCount","increment","x","decrement","set","useTimeout","callback","savedCallback","id","useInterval","useLocalStorage","readValue","storedValue","setStoredValue","removeValue","handleStorageChange","handleLocalStorageChange","usePrevious","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","useIsFirstRender","isFirst","useUpdateEffect","effect"],"mappings":"wCAuCO,SAASA,EAAAA,CACdC,EACAC,CACAC,CAAAA,CAAAA,CACsB,CACtB,GAAM,CACJ,UAAAC,CAAAA,CAAAA,CACA,SAAAC,CAAW,CAAA,CAAA,CACX,mBAAAC,CAAAA,CAAAA,CAAsB,GACtB,UAAAC,CAAAA,CAAAA,CACA,QAAAC,CAAAA,CAAAA,CACA,gBAAAC,CAAkB,CAAA,EAAA,CAClB,aAAAC,CACF,CAAA,CAAIP,EAEE,CAACQ,CAAAA,CAAWC,CAAY,CAAA,CAAIC,eAAS,CAAC,CAAA,CACtC,CAACC,CAAAA,CAAaC,CAAc,CAAIF,CAAAA,cAAAA,CAAS,KAAK,CAAA,CAC9CG,EAAmBC,YAAuB,EAAA,CAC1CC,EAAeD,YAAoB,EAAA,CACnCE,EAAiBF,YAAO,CAAA,IAAI,GAAqB,CAAA,CACjDG,EAAoBH,YAAO,CAAA,KAAK,CAEhCI,CAAAA,CAAAA,CAAgBC,kBACnBC,CAA0B,EAAA,CACzB,GAAI,OAAOnB,GAAe,UAAY,CAAA,CACpC,IAAMoB,CAASL,CAAAA,CAAAA,CAAe,QAAQ,GAAII,CAAAA,CAAK,CAC/C,CAAA,GAAIC,IAAW,MAAW,CAAA,OAAOA,CAEjC,CAAA,IAAMC,EAASrB,CAAWmB,CAAAA,CAAAA,CAAOtB,CAAMsB,CAAAA,CAAK,CAAC,CAC7C,CAAA,OAAAJ,EAAe,OAAQ,CAAA,GAAA,CAAII,EAAOE,CAAM,CAAA,CACjCA,CACT,CACA,OAAOrB,CACT,CAAA,CACA,CAACA,CAAAA,CAAYH,CAAK,CACpB,CAAA,CAEM,CAAE,UAAA,CAAAyB,EAAY,QAAAC,CAAAA,CAAAA,CAAU,aAAAC,CAAc,CAAA,WAAA,CAAAC,CAAY,CAAIC,CAAAA,aAAAA,CAAQ,IAAM,CACxE,IAAIC,CAAoB,CAAA,CAAA,CACpBC,CAAW,CAAA,CAAA,CACXC,EAAShC,CAAM,CAAA,MAAA,CAAS,CAE5B,CAAA,IAAA,IAASiC,EAAI,CAAGA,CAAAA,CAAAA,CAAIjC,EAAM,MAAQiC,CAAAA,CAAAA,EAAAA,CAAK,CACrC,IAAMT,CAAAA,CAASJ,CAAca,CAAAA,CAAC,EAE9B,GAAIH,CAAAA,CAAoBN,EAASd,CAAYN,CAAAA,CAAAA,CAAWC,EACtD0B,CAAWE,CAAAA,CAAAA,CAAI,CACfH,CAAAA,CAAAA,EAAqBN,OAIzB,KAAA,CAEAM,EAAoB,CACpB,CAAA,IAAA,IAASG,EAAIF,CAAUE,CAAAA,CAAAA,CAAIjC,CAAM,CAAA,MAAA,CAAQiC,IAAK,CAC5C,GAAIH,CAAoB7B,CAAAA,CAAAA,CAAkBG,EAAWC,CAAqB,CAAA,CACxE2B,CAASC,CAAAA,CAAAA,CAAI,EACb,KACF,CACAH,GAAqBV,CAAca,CAAAA,CAAC,EACtC,CAEA,IAAIC,CAAS,CAAA,CAAA,CACb,QAASD,CAAI,CAAA,CAAA,CAAGA,CAAIjC,CAAAA,CAAAA,CAAM,OAAQiC,CAChCC,EAAAA,CAAAA,CAAAA,EAAUd,CAAca,CAAAA,CAAC,EAG3B,IAAME,CAAAA,CAA2B,EAC7BC,CAAAA,CAAAA,CAAU,EAEd,IAASH,IAAAA,CAAAA,CAAI,CAAGA,CAAAA,CAAAA,CAAIF,EAAUE,CAC5BG,EAAAA,CAAAA,CAAAA,EAAWhB,CAAca,CAAAA,CAAC,EAG5B,IAASA,IAAAA,CAAAA,CAAIF,CAAUE,CAAAA,CAAAA,EAAKD,GAAUC,CAAIjC,CAAAA,CAAAA,CAAM,OAAQiC,CAAK,EAAA,CAAA,CAC3D,IAAMT,CAASJ,CAAAA,CAAAA,CAAca,CAAC,CAAA,CACxBI,EAAYD,CAAUZ,CAAAA,CAAAA,CAASd,GAAa0B,CAAU1B,CAAAA,CAAAA,CAAYT,EAExEkC,CAAO,CAAA,IAAA,CAAK,CACV,KAAA,CAAOF,EACP,IAAMjC,CAAAA,CAAAA,CAAMiC,CAAC,CACb,CAAA,GAAA,CAAK3B,EAAaA,CAAW2B,CAAAA,CAAAA,CAAGjC,CAAMiC,CAAAA,CAAC,CAAC,CAAIA,CAAAA,CAAAA,CAC5C,KAAO,CAAA,CACL,SAAU,UACV,CAAA,GAAA,CAAK,CAAGG,EAAAA,CAAO,KACf,IAAM,CAAA,CAAA,CACN,MAAO,MACP,CAAA,MAAA,CAAQ,GAAGZ,CAAM,CAAA,EAAA,CACnB,CACA,CAAA,SAAA,CAAAa,CACF,CAAC,CAAA,CAEDD,CAAWZ,EAAAA,EACb,CAEA,OAAO,CACL,UAAYO,CAAAA,CAAAA,CACZ,SAAUC,CACV,CAAA,YAAA,CAAcG,EACd,WAAaD,CAAAA,CACf,CACF,CAAG,CAAA,CAACxB,CAAWT,CAAAA,CAAAA,CAAiBD,EAAOoB,CAAehB,CAAAA,CAAAA,CAAUC,CAAqBC,CAAAA,CAAU,CAAC,CAEhGgC,CAAAA,eAAAA,CAAU,IAAM,CACd,IAAMC,CAAiB7B,CAAAA,CAAAA,EAAakB,EAAc3B,CAE9CsC,CAAAA,CAAAA,CAAAA,EAAkB/B,GAAmB,CAACW,CAAAA,CAAkB,OAAWV,EAAAA,CAAAA,EACrEU,EAAkB,OAAU,CAAA,IAAA,CAC5BV,GACS8B,EAAAA,CAAAA,CAAiB/B,IAC1BW,CAAkB,CAAA,OAAA,CAAU,KAEhC,EAAA,CAAA,CAAG,CAACT,CAAWkB,CAAAA,CAAAA,CAAa3B,EAAiBO,CAAiBC,CAAAA,CAAY,CAAC,CAE3E,CAAA,IAAM+B,CAAenB,CAAAA,iBAAAA,CAClBoB,GAAkC,CACjC,IAAMC,CAASD,CAAAA,CAAAA,CAAE,cACjBxB,CAAa,CAAA,OAAA,CAAUyB,CAEvB,CAAA,IAAMC,EAAeD,CAAO,CAAA,SAAA,CAC5B/B,EAAagC,CAAY,CAAA,CACzB7B,EAAe,IAAI,CAAA,CAEfP,CACFA,EAAAA,CAAAA,CAASoC,CAAY,CAGnB5B,CAAAA,CAAAA,CAAiB,OACnB,EAAA,YAAA,CAAaA,EAAiB,OAAO,CAAA,CAGvCA,CAAiB,CAAA,OAAA,CAAU,WAAW,IAAM,CAC1CD,EAAe,KAAK,EACtB,EAAG,GAAG,EACR,CACA,CAAA,CAACP,CAAQ,CACX,CAAA,CAEMqC,CAAgBvB,CAAAA,iBAAAA,CACpB,CAACC,CAAepB,CAAAA,CAAAA,CAA2B,EAAC,GAAM,CAChD,GAAM,CAAE,SAAA2C,CAAW,CAAA,MAAA,CAAQ,MAAAC,CAAQ,CAAA,OAAQ,CAAI5C,CAAAA,CAAAA,CAE/C,GAAI,CAACe,CAAAA,CAAa,SAAWK,CAAQ,CAAA,CAAA,EAAKA,GAAStB,CAAM,CAAA,MAAA,CAAQ,OAEjE,IAAI+C,EAAY,CAChB,CAAA,IAAA,IAASd,EAAI,CAAGA,CAAAA,CAAAA,CAAIX,EAAOW,CACzBc,EAAAA,CAAAA,CAAAA,EAAa3B,CAAca,CAAAA,CAAC,EAG9B,IAAMe,CAAAA,CAAQ5B,CAAcE,CAAAA,CAAK,EAEjC,OAAQwB,CAAAA,EACN,KAAK,SACHC,CAAYA,CAAAA,CAAAA,CAAY9C,EAAkB,CAAI+C,CAAAA,CAAAA,CAAQ,EACtD,MACF,KAAK,KACHD,CAAAA,CAAAA,CAAYA,EAAY9C,CAAkB+C,CAAAA,CAAAA,CAC1C,KACJ,CAEAD,EAAY,IAAK,CAAA,GAAA,CAAI,CAAG,CAAA,IAAA,CAAK,IAAIA,CAAWnB,CAAAA,CAAAA,CAAc3B,CAAe,CAAC,CAAA,CAE1EgB,EAAa,OAAQ,CAAA,QAAA,CAAS,CAC5B,GAAA,CAAK8B,EACL,QAAAF,CAAAA,CACF,CAAC,EACH,EACA,CAAC7C,CAAAA,CAAM,MAAQoB,CAAAA,CAAAA,CAAenB,EAAiB2B,CAAW,CAC5D,EAEA,OAAAU,eAAAA,CAAU,IACD,IAAM,CACPvB,CAAiB,CAAA,OAAA,EACnB,aAAaA,CAAiB,CAAA,OAAO,EAEzC,CACC,CAAA,EAAE,CAEE,CAAA,CACL,YAAAY,CAAAA,CAAAA,CACA,YAAAC,CACA,CAAA,aAAA,CAAAgB,EACA,cAAgB,CAAA,CACd,SAAUJ,CACV,CAAA,KAAA,CAAO,CACL,QAAA,CAAU,OACV,QAAU,CAAA,UAAA,CACV,MAAQ,CAAA,CAAA,EAAGvC,CAAe,CAC5B,EAAA,CAAA,CACF,CACA,CAAA,YAAA,CAAc,CACZ,KAAO,CAAA,CACL,SAAU,UACV,CAAA,MAAA,CAAQ,GAAG2B,CAAW,CAAA,EAAA,CAAA,CACtB,KAAO,CAAA,MACT,CACF,CACA,CAAA,WAAA,CAAAf,CACF,CACF,CC1OA,SAASoC,EAAUC,CAAYC,CAAAA,CAAAA,CAAqB,CAClD,GAAID,CAAAA,GAAMC,CAAG,CAAA,OAAO,MAEpB,GAAID,CAAAA,YAAa,IAAQC,EAAAA,CAAAA,YAAa,KACpC,OAAOD,CAAAA,CAAE,OAAQ,EAAA,GAAMC,EAAE,OAAQ,EAAA,CAGnC,GAAI,CAACD,CAAAA,EAAK,CAACC,CAAM,EAAA,OAAOD,CAAM,EAAA,QAAA,EAAY,OAAOC,CAAM,EAAA,QAAA,CACrD,OAAOD,CAAMC,GAAAA,CAAAA,CAOf,GAJID,CAAM,EAAA,IAAA,EAA2BC,CAAM,GAAA,IAAA,EAAQA,IAAM,MAIrDD,EAAAA,CAAAA,CAAE,cAAgBC,CAAE,CAAA,WAAA,CAAa,OAAO,MAE5C,CAAA,GAAI,KAAM,CAAA,OAAA,CAAQD,CAAC,CAAK,EAAA,KAAA,CAAM,OAAQC,CAAAA,CAAC,EAAG,CACxC,GAAID,CAAE,CAAA,MAAA,GAAWC,EAAE,MAAQ,CAAA,OAAO,OAElC,IAASlB,IAAAA,CAAAA,CAAI,EAAGA,CAAIiB,CAAAA,CAAAA,CAAE,MAAQjB,CAAAA,CAAAA,EAAAA,CAC5B,GAAI,CAACgB,CAAAA,CAAUC,CAAEjB,CAAAA,CAAC,EAAGkB,CAAElB,CAAAA,CAAC,CAAC,CAAA,CAAG,OAAO,MAGrC,CAAA,OAAO,KACT,CAEA,GAAIiB,aAAa,GAAOC,EAAAA,CAAAA,YAAa,GAAK,CAAA,CACxC,GAAID,CAAE,CAAA,IAAA,GAASC,CAAE,CAAA,IAAA,CAAM,OAAO,MAE9B,CAAA,IAAA,GAAW,CAACC,CAAAA,CAAKC,CAAK,CAAKH,GAAAA,CAAAA,CACzB,GAAI,CAACC,CAAAA,CAAE,IAAIC,CAAG,CAAA,EAAK,CAACH,CAAAA,CAAUI,EAAOF,CAAE,CAAA,GAAA,CAAIC,CAAG,CAAC,CAAA,CAC7C,OAAO,MAIX,CAAA,OAAO,KACT,CAEA,GAAIF,CAAa,YAAA,GAAA,EAAOC,aAAa,GAAK,CAAA,CACxC,GAAID,CAAE,CAAA,IAAA,GAASC,CAAE,CAAA,IAAA,CAAM,OAAO,MAE9B,CAAA,IAAMG,CAAS,CAAA,KAAA,CAAM,KAAKJ,CAAC,CAAA,CACrBK,CAAS,CAAA,KAAA,CAAM,KAAKJ,CAAC,CAAA,CAE3B,OAAOG,CAAO,CAAA,KAAA,CAAME,GAAQD,CAAO,CAAA,IAAA,CAAKE,CAASR,EAAAA,CAAAA,CAAUO,EAAMC,CAAK,CAAC,CAAC,CAC1E,CAEA,IAAMC,CAAAA,CAAO,MAAO,CAAA,IAAA,CAAKR,CAAW,CAEpC,CAAA,GAAIQ,EAAK,MAAW,GAAA,MAAA,CAAO,KAAKP,CAAW,CAAA,CAAE,MAC3C,CAAA,OAAO,OAGT,IAAWC,IAAAA,CAAAA,IAAOM,CAChB,CAAA,GAAI,CAACT,CAAWC,CAAAA,CAAAA,CAAUE,CAAG,CAAA,CAAID,EAAUC,CAAG,CAAC,EAC7C,OAAO,MAAA,CAIX,OAAO,KACT,CAEO,SAASO,EAAAA,CACdC,EACAC,CACG,CAAA,CACH,IAAMC,CAAAA,CAAM9C,cAaZ,CAAA,OAXca,aAAQ,CAAA,KAAA,CAChB,CAACiC,CAAI,CAAA,OAAA,EAAW,CAACb,CAAUY,CAAAA,CAAAA,CAAMC,EAAI,OAAQ,CAAA,IAAI,CACnDA,IAAAA,CAAAA,CAAI,QAAU,CACZ,IAAA,CAAAD,CACA,CAAA,KAAA,CAAOD,GACT,CAAA,CAAA,CAGKE,CAAI,CAAA,OAAA,CAAQ,OAClB,CAACF,CAAAA,CAAS,GAAGC,CAAI,CAAC,CAGvB,CAEO,SAASE,EAAyBV,CAAAA,CAAAA,CAAa,CACpD,IAAMS,CAAAA,CAAM9C,YAAUqC,CAAAA,CAAK,EAE3B,OAAKJ,CAAAA,CAAUI,CAAOS,CAAAA,CAAAA,CAAI,OAAO,CAC/BA,GAAAA,CAAAA,CAAI,QAAUT,CAGTS,CAAAA,CAAAA,CAAAA,CAAI,OACb,CC1EO,SAASE,EACdC,CAAAA,CAAAA,CACA/D,CAAmC,CAAA,GACR,CAC3B,GAAM,CAAE,cAAAgE,CAAAA,CAAAA,CAAiB,GAAI,cAAAC,CAAAA,CAAAA,CAAiB,IAAK,CAAA,CAAIjE,EAEjD,CAACmD,CAAAA,CAAOe,CAAgB,CAAIxD,CAAAA,cAAAA,CAAYqD,CAAY,CACpDI,CAAAA,CAAAA,CAAarD,YAAY,CAAA,CAACiD,CAAY,CAAC,CAAA,CACvCK,EAAkBtD,YAAO,CAAA,CAAC,EAC1B,EAAGuD,CAAW,CAAA,CAAI3D,eAAS,EAAE,CAE7B4D,CAAAA,CAAAA,CAAWnD,kBAAaoD,CAAmC,EAAA,CAC/D,IAAMC,CAAAA,CAAgB,OAAOD,CAAa,EAAA,UAAA,CACrCA,EAA4BpB,CAAK,CAAA,CAClCoB,EAEJ,GAAI,MAAA,CAAO,EAAGC,CAAAA,CAAAA,CAAerB,CAAK,CAAG,CAAA,OAErC,IAAMsB,CAAAA,CAAaN,EAAW,OAAQ,CAAA,KAAA,CAAM,CAAGC,CAAAA,CAAAA,CAAgB,QAAU,CAAC,CAAA,CAC1EK,EAAW,IAAKD,CAAAA,CAAa,EAEzBC,CAAW,CAAA,MAAA,CAAST,CACtBS,CAAAA,CAAAA,CAAW,OAEXL,CAAAA,CAAAA,CAAgB,OAGlBD,EAAAA,CAAAA,CAAAA,CAAW,QAAUM,CACrBP,CAAAA,CAAAA,CAAiBM,CAAa,CAAA,CAC9BH,EAAY,EAAE,EAChB,CAAG,CAAA,CAAClB,EAAOa,CAAc,CAAC,CAEpBU,CAAAA,CAAAA,CAAOvD,kBAAY,IAAM,CAC7B,GAAIiD,CAAgB,CAAA,OAAA,CAAU,EAAG,CAC/BA,CAAAA,CAAgB,OAChB,EAAA,CAAA,IAAMG,EAAWJ,CAAW,CAAA,OAAA,CAAQC,EAAgB,OAAO,CAAA,CAC3DF,EAAiBK,CAAQ,CAAA,CACzBF,CAAY,CAAA,EAAE,EAChB,CACF,CAAG,CAAA,EAAE,CAECM,CAAAA,CAAAA,CAAOxD,iBAAY,CAAA,IAAM,CAC7B,GAAIiD,CAAAA,CAAgB,QAAUD,CAAW,CAAA,OAAA,CAAQ,OAAS,CAAG,CAAA,CAC3DC,CAAgB,CAAA,OAAA,EAAA,CAChB,IAAMG,CAAWJ,CAAAA,CAAAA,CAAW,OAAQC,CAAAA,CAAAA,CAAgB,OAAO,CAC3DF,CAAAA,CAAAA,CAAiBK,CAAQ,CAAA,CACzBF,EAAY,EAAE,EAChB,CACF,CAAA,CAAG,EAAE,CAAA,CAECO,CAAOzD,CAAAA,iBAAAA,CAAaC,GAAkB,CAC1C,GAAIA,CAAS,EAAA,CAAA,EAAKA,EAAQ+C,CAAW,CAAA,OAAA,CAAQ,MAAQ,CAAA,CACnDC,EAAgB,OAAUhD,CAAAA,CAAAA,CAC1B,IAAMmD,CAAWJ,CAAAA,CAAAA,CAAW,QAAQ/C,CAAK,CAAA,CACzC8C,CAAiBK,CAAAA,CAAQ,EACzBF,CAAY,CAAA,EAAE,EAChB,CACF,EAAG,EAAE,CAECQ,CAAAA,CAAAA,CAAQ1D,kBAAY,IAAM,CAC9BgD,EAAW,OAAU,CAAA,CAAChB,CAAK,CAC3BiB,CAAAA,CAAAA,CAAgB,OAAU,CAAA,CAAA,CAC1BC,EAAY,EAAE,EAChB,CAAA,CAAG,CAAClB,CAAK,CAAC,CAEJ2B,CAAAA,CAAAA,CAAQ3D,kBAAaoD,CAAiB,EAAA,CAC1C,IAAMQ,CAAaR,CAAAA,CAAAA,GAAa,OAAYA,CAAWR,CAAAA,CAAAA,CACvDI,CAAW,CAAA,OAAA,CAAU,CAACY,CAAU,CAAA,CAChCX,CAAgB,CAAA,OAAA,CAAU,EAC1BF,CAAiBa,CAAAA,CAAU,CAC3BV,CAAAA,CAAAA,CAAY,EAAE,EAChB,EAAG,CAACN,CAAY,CAAC,CAEXiB,CAAAA,CAAAA,CAAUf,CACZE,CAAAA,CAAAA,CAAW,QACXA,CAAW,CAAA,OAAA,CAAQ,KAAM,CAAA,CAAA,CAAG,EAAE,CAElC,CAAA,OAAO,CACL,KAAA,CAAAhB,EACA,QAAAmB,CAAAA,CAAAA,CACA,QAAAU,CACA,CAAA,YAAA,CAAcZ,EAAgB,OAC9B,CAAA,OAAA,CAASA,CAAgB,CAAA,OAAA,CAAU,EACnC,OAASA,CAAAA,CAAAA,CAAgB,QAAUD,CAAW,CAAA,OAAA,CAAQ,OAAS,CAC/D,CAAA,IAAA,CAAAO,CACA,CAAA,IAAA,CAAAC,EACA,IAAAC,CAAAA,CAAAA,CACA,MAAAC,CACA,CAAA,KAAA,CAAAC,CACF,CACF,CChGA,SAASG,GAAeC,CAAqBC,CAAAA,CAAAA,CAAqC,CAChF,OAAQA,EAAO,IAAM,EACnB,KAAK,KACH,CAAA,OAAI,OAAO,EAAGA,CAAAA,CAAAA,CAAO,OAASD,CAAAA,CAAAA,CAAM,OAAO,CAClCA,CAAAA,CAAAA,CAEF,CACL,IAAA,CAAM,CAAC,GAAGA,CAAAA,CAAM,IAAMA,CAAAA,CAAAA,CAAM,OAAO,CACnC,CAAA,OAAA,CAASC,EAAO,OAChB,CAAA,MAAA,CAAQ,EACV,CAAA,CAGF,KAAK,MAAA,CAAQ,CACX,GAAID,CAAAA,CAAM,IAAK,CAAA,MAAA,GAAW,EAAG,OAAOA,CAAAA,CAEpC,IAAME,CAAAA,CAAWF,EAAM,IAAKA,CAAAA,CAAAA,CAAM,KAAK,MAAS,CAAA,CAAC,EAGjD,OAAO,CACL,IAHcA,CAAAA,CAAAA,CAAM,KAAK,KAAM,CAAA,CAAA,CAAG,EAAE,CAIpC,CAAA,OAAA,CAASE,EACT,MAAQ,CAAA,CAACF,CAAM,CAAA,OAAA,CAAS,GAAGA,CAAM,CAAA,MAAM,CACzC,CACF,CAEA,KAAK,MAAQ,CAAA,CACX,GAAIA,CAAAA,CAAM,OAAO,MAAW,GAAA,CAAA,CAAG,OAAOA,CAAAA,CAEtC,IAAMG,CAAOH,CAAAA,CAAAA,CAAM,MAAO,CAAA,CAAC,EACrBI,CAAYJ,CAAAA,CAAAA,CAAM,OAAO,KAAM,CAAA,CAAC,EAEtC,OAAO,CACL,IAAM,CAAA,CAAC,GAAGA,CAAM,CAAA,IAAA,CAAMA,CAAM,CAAA,OAAO,EACnC,OAASG,CAAAA,CAAAA,CACT,MAAQC,CAAAA,CACV,CACF,CAEA,KAAK,QACH,OAAO,CACL,KAAM,EAAC,CACP,OAASH,CAAAA,CAAAA,CAAO,QAChB,MAAQ,CAAA,EACV,CAAA,CAGF,KAAK,OACH,CAAA,OAAO,CACL,IAAA,CAAM,EACN,CAAA,OAAA,CAASD,EAAM,OACf,CAAA,MAAA,CAAQ,EACV,CAAA,CAGF,QACE,OAAOA,CACX,CACF,CAqBO,SAASK,EACdxB,CAAAA,CAAAA,CACA/D,EAA0B,EAAC,CACT,CAClB,GAAM,CAAE,UAAAwF,CAAAA,CAAAA,CAAa,GAAI,CAAIxF,CAAAA,CAAAA,CAEvB,CAACkF,CAAOO,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAWT,GAAgB,CACnD,IAAA,CAAM,EAAC,CACP,QAASlB,CACT,CAAA,MAAA,CAAQ,EACV,CAAC,CAEKO,CAAAA,CAAAA,CAAWnD,kBAAagC,CAAa,EAAA,CACzCsC,EAAS,CAAE,IAAA,CAAM,KAAO,CAAA,OAAA,CAAStC,CAAM,CAAC,EAC1C,CAAG,CAAA,EAAE,CAECuB,CAAAA,CAAAA,CAAOvD,iBAAY,CAAA,IAAM,CAC7BsE,CAAS,CAAA,CAAE,KAAM,MAAO,CAAC,EAC3B,CAAG,CAAA,EAAE,CAAA,CAECd,EAAOxD,iBAAY,CAAA,IAAM,CAC7BsE,CAAAA,CAAS,CAAE,IAAM,CAAA,MAAO,CAAC,EAC3B,EAAG,EAAE,EAECZ,CAAQ1D,CAAAA,iBAAAA,CAAY,IAAM,CAC9BsE,CAAAA,CAAS,CAAE,IAAA,CAAM,OAAQ,CAAC,EAC5B,EAAG,EAAE,EAECX,CAAQ3D,CAAAA,iBAAAA,CAAagC,CAAa,EAAA,CACtCsC,EAAS,CAAE,IAAA,CAAM,QAAS,OAAStC,CAAAA,CAAM,CAAC,EAC5C,CAAA,CAAG,EAAE,EAECwC,CAAe,CAAA,CACnB,GAAGT,CAAAA,CACH,KAAMA,CAAM,CAAA,IAAA,CAAK,KAAM,CAAA,CAACM,CAAU,CACpC,CAAA,CAEA,OAAO,CACL,KAAA,CAAOG,EAAa,OACpB,CAAA,QAAA,CAAArB,CACA,CAAA,IAAA,CAAAI,EACA,IAAAC,CAAAA,CAAAA,CACA,KAAAE,CAAAA,CAAAA,CACA,MAAAC,CACA,CAAA,OAAA,CAASa,CAAa,CAAA,IAAA,CAAK,OAAS,CACpC,CAAA,OAAA,CAASA,EAAa,MAAO,CAAA,MAAA,CAAS,EACtC,OAAS,CAAA,CACP,IAAMA,CAAAA,CAAAA,CAAa,KACnB,MAAQA,CAAAA,CAAAA,CAAa,MACvB,CACF,CACF,CCrIO,SAASC,GACdC,CACAC,CAAAA,CAAAA,CACAC,CAAkC,CAAA,GAChB,CAClB,GAAM,CAACb,CAAAA,CAAOc,CAAY,CAAIN,CAAAA,gBAAAA,CAAWG,CAASC,CAAAA,CAAY,EACxDG,CAAWnF,CAAAA,YAAAA,CAAOoE,CAAK,CAC7Be,CAAAA,CAAAA,CAAS,QAAUf,CAEnB,CAAA,IAAMgB,CAAqB,CAAA,CACzB,SAAU,IAAMD,CAAAA,CAAS,OACzB,CAAA,QAAA,CAAU,IAAM,CACd,MAAM,IAAI,KAAA,CAAM,0BAA0B,CAC5C,CACF,EAEMR,CAAWtE,CAAAA,iBAAAA,CAAagE,GAAc,CAC1C,IAAIgB,CAAgBH,CAAAA,CAAAA,CAEpB,QAASjE,CAAIgE,CAAAA,CAAAA,CAAY,MAAS,CAAA,CAAA,CAAGhE,GAAK,CAAGA,CAAAA,CAAAA,EAAAA,CAAK,CAChD,IAAMqE,EAAaL,CAAYhE,CAAAA,CAAC,EAC1BsD,CAAOc,CAAAA,CAAAA,CACbA,EAAgBC,CAAWF,CAAAA,CAAK,CAAEb,CAAAA,CAAI,EACxC,CAEAc,CAAAA,CAAchB,CAAM,EACtB,EAAG,CAACY,CAAAA,CAAaC,CAAcE,CAAAA,CAAK,CAAC,CAErC,CAAA,OAAAA,EAAM,QAAWT,CAAAA,CAAAA,CAEV,CAACP,CAAOO,CAAAA,CAAQ,CACzB,KAEaY,EAA0CH,CAAAA,CAAAA,EAAWb,GAAUF,CAAW,EAAA,CACrF,QAAQ,KAAM,CAAA,CAAA,QAAA,EAAWA,CAAO,CAAA,IAAA,EAAQ,SAAS,CAAE,CAAA,CAAA,CACnD,QAAQ,GAAI,CAAA,iBAAA,CAAmBe,EAAM,QAAS,EAAC,CAC/C,CAAA,OAAA,CAAQ,IAAI,SAAWf,CAAAA,CAAM,CAE7B,CAAA,IAAMmB,EAASjB,CAAKF,CAAAA,CAAM,CAE1B,CAAA,OAAA,OAAA,CAAQ,IAAI,aAAee,CAAAA,CAAAA,CAAM,UAAU,CAAA,CAC3C,QAAQ,QAAS,EAAA,CAEVI,CACT,CAAA,CAEaC,GAAyCL,CAAWb,EAAAA,CAAAA,EAAUF,CACrE,EAAA,OAAOA,GAAW,UACbA,CAAAA,CAAAA,CAAOe,CAAM,CAAA,QAAA,CAAUA,EAAM,QAAQ,CAAA,CAGvCb,EAAKF,CAAM,CAAA,CAGPqB,GAA4CN,CAAWb,EAAAA,CAAAA,EAAS,CAC3E,IAAMoB,EAAY,MAAe,CAAA,4BAAA,CAEjC,GAAI,CAACA,EACH,OAAOpB,CAAAA,CAGT,IAAMqB,CAAAA,CAAmBD,EAAS,OAAQ,EAAA,CAE1C,OAAQtB,CAAW,EAAA,CACjB,IAAMmB,CAASjB,CAAAA,CAAAA,CAAKF,CAAM,CAAA,CAC1B,OAAAuB,CAAiB,CAAA,IAAA,CAAKvB,EAAQe,CAAM,CAAA,QAAA,EAAU,CACvCI,CAAAA,CACT,CACF,EAcO,SAASK,EAA0E,EAAA,CACxF,OAAQT,CAAWb,EAAAA,CAAAA,EAAS,MAAOF,CAAW,EAAA,CAC5C,GAAI,CAACA,EAAO,IAAM,EAAA,OAAA,CAChB,OAAOE,CAAAA,CAAKF,CAAM,CAGpB,CAAA,GAAM,CAAE,IAAA,CAAAyB,EAAM,OAAAC,CAAAA,CAAQ,EAAI1B,CAE1BE,CAAAA,CAAAA,CAAK,CACH,IAAM,CAAA,CAAA,EAAGuB,CAAI,CAAA,QAAA,CAAA,CACb,KAAM,CAAE,SAAA,CAAW,IAAK,CAC1B,CAAM,CAEN,CAAA,GAAI,CACF,IAAMN,EAAS,OAAOO,CAAAA,EAAY,WAAa,MAAMA,CAAAA,GAAY,MAAMA,CAAAA,CAEvE,OAAAxB,CAAAA,CAAK,CACH,IAAM,CAAA,CAAA,EAAGuB,CAAI,CAAA,QAAA,CAAA,CACb,QAASN,CACT,CAAA,IAAA,CAAM,CAAE,SAAA,CAAW,EAAK,CAC1B,CAAM,EAECA,CACT,CAAA,MAASQ,EAAO,CACd,MAAAzB,CAAK,CAAA,CACH,KAAM,CAAGuB,EAAAA,CAAI,SACb,OAASE,CAAAA,CAAAA,CACT,KAAM,CAAE,OAAA,CAAS,IAAM,CAAA,KAAA,CAAAA,CAAM,CAC/B,CAAM,EAEAA,CACR,CACF,CACF,CCzFO,SAASC,EACdC,CAAAA,CAAAA,CACAhH,EAA4B,EAAC,CACT,CACpB,GAAM,CACJ,UAAAiH,CAAY,CAAA,IAAA,CACZ,iBAAAC,CAAAA,CAAAA,CAAoB,EACpB,iBAAAC,CAAAA,CAAAA,CAAoB,GACpB,CAAA,MAAA,CAAAC,EAAS,KACT,CAAA,MAAA,CAAAC,CACA,CAAA,OAAA,CAAAC,EACA,SAAAC,CAAAA,CAAAA,CACA,QAAAC,CACA,CAAA,eAAA,CAAAC,EACA,eAAAC,CAAAA,CAAAA,CACA,SAAAC,CAAAA,CAAAA,CACA,aAAAC,CAAe,CAAA,KAAA,CACf,MAAAC,CAAAA,CAAAA,CACA,UAAAC,CACF,CAAA,CAAI9H,CAEE,CAAA,CAAC+H,EAAYC,CAAa,CAAA,CAAItH,eAAqB,CAAC,CAAA,CACpD,CAACuH,CAAaC,CAAAA,CAAc,CAAIxH,CAAAA,cAAAA,CAA8B,IAAI,CAClE,CAAA,CAACyH,EAAiBC,CAAkB,CAAA,CAAI1H,eAAmB,IAAI,CAAA,CAC/D,CAAC2H,CAAAA,CAAgBC,CAAiB,CAAI5H,CAAAA,cAAAA,CAAyB,EAAE,CAAA,CACjE,CAAC6H,CAAgBC,CAAAA,CAAiB,CAAI9H,CAAAA,cAAAA,CAAS,CAAC,CAEhD+H,CAAAA,CAAAA,CAAK3H,YAAyB,CAAA,IAAI,EAClC4H,CAAiB5H,CAAAA,YAAAA,EACjB6H,CAAAA,CAAAA,CAAiB7H,cACjB8H,CAAAA,CAAAA,CAAY9H,cACZ+H,CAAAA,CAAAA,CAAoB/H,aAAO,CAAC,CAAA,CAC5BgI,CAAehI,CAAAA,YAAAA,CAAO,KAAK,CAE3BiI,CAAAA,CAAAA,CAAS5H,iBAAY,CAAA,IAClB,OAAO6F,CAAQ,EAAA,UAAA,CAAaA,CAAI,EAAA,CAAIA,EAC1C,CAACA,CAAG,CAAC,CAEFgC,CAAAA,CAAAA,CAAiB7H,kBAAY,IAAM,CACvC,GAAI,CAAC2G,GAAa,CAACW,CAAAA,CAAG,OAAWA,EAAAA,CAAAA,CAAG,QAAQ,UAAe,GAAA,SAAA,CAAU,IACnE,CAAA,OAGF,GAAM,CAAE,OAAA,CAAAQ,EAAU,MAAQ,CAAA,QAAA,CAAAC,EAAW,GAAO,CAAA,WAAA,CAAAC,CAAc,CAAA,GAAM,EAAIrB,CAE9DsB,CAAAA,CAAAA,CAAW,IAAM,CACrB,GAAIX,EAAG,OAAWA,EAAAA,CAAAA,CAAG,OAAQ,CAAA,UAAA,GAAe,UAAU,IAAM,CAAA,CAC1D,IAAMY,CAAc,CAAA,OAAOJ,GAAY,UAAaA,CAAAA,CAAAA,EAAYA,CAAAA,CAAAA,CAChER,EAAG,OAAQ,CAAA,IAAA,CAAKY,CAAW,CAAA,CAEvBT,EAAU,OACZ,EAAA,YAAA,CAAaA,CAAU,CAAA,OAAO,EAGhCA,CAAU,CAAA,OAAA,CAAU,WAAW,IAAM,CAC/BH,EAAG,OACLA,EAAAA,CAAAA,CAAG,OAAQ,CAAA,KAAA,GAEf,CAAGU,CAAAA,CAAW,EAChB,CACF,EAEAC,CAAS,EAAA,CACTT,CAAe,CAAA,OAAA,CAAU,YAAYS,CAAUF,CAAAA,CAAQ,EACzD,CAAG,CAAA,CAACpB,CAAS,CAAC,CAAA,CAERwB,CAAgBnI,CAAAA,iBAAAA,CAAY,IAAM,CAClCwH,CAAAA,CAAe,OACjB,EAAA,aAAA,CAAcA,EAAe,OAAO,CAAA,CAElCC,CAAU,CAAA,OAAA,EACZ,aAAaA,CAAU,CAAA,OAAO,EAElC,CAAG,CAAA,EAAE,CAECW,CAAAA,CAAAA,CAAUpI,iBAAY,CAAA,IAAM,CAChC,GAAI,CAAA2H,EAAa,OAEjB,CAAA,GAAI,CACF,IAAMU,CAAAA,CAAQT,CAAO,EAAA,CACrBN,EAAG,OAAUd,CAAAA,CAAAA,CAAY,IAAI,SAAU6B,CAAAA,CAAAA,CAAO7B,CAAS,CAAI,CAAA,IAAI,SAAU6B,CAAAA,CAAK,EAE9Ef,CAAG,CAAA,OAAA,CAAQ,MAAUgB,CAAAA,CAAAA,EAAU,CACzBX,CAAa,CAAA,OAAA,GAEjBd,CAAcS,CAAAA,CAAAA,CAAG,QAAS,UAAU,CAAA,CACpCI,EAAkB,OAAU,CAAA,CAAA,CAC5BL,EAAkB,CAAC,CAAA,CAEfnB,CACFA,EAAAA,CAAAA,CAAOoC,CAAK,CAGdT,CAAAA,CAAAA,EACF,EAAA,CAAA,CAEAP,EAAG,OAAQ,CAAA,OAAA,CAAWgB,CAAU,EAAA,CAC1BX,EAAa,OAEjBd,GAAAA,CAAAA,CAAcS,EAAG,OAAS,CAAA,UAAU,EACpCa,CAAc,EAAA,CAEVhC,CACFA,EAAAA,CAAAA,CAAQmC,CAAK,CAGXxC,CAAAA,CAAAA,EAAa4B,CAAkB,CAAA,OAAA,CAAU3B,GAChB,CAAAQ,CAAAA,EAAkBA,CAAgB+B,CAAAA,CAAK,KAGhEf,CAAe,CAAA,OAAA,CAAU,WAAW,IAAM,CACxCG,EAAkB,OAClBL,EAAAA,CAAAA,CAAAA,CAAkBK,CAAkB,CAAA,OAAO,EAC3CU,CAAQ,GACV,EAAGpC,CAAoB,CAAA,IAAA,CAAK,IAAI,CAAG0B,CAAAA,CAAAA,CAAkB,OAAO,CAAC,GAEtDA,CAAkB,CAAA,OAAA,EAAW3B,GAAqBO,CAC3DA,EAAAA,CAAAA,IAEJ,CAEAgB,CAAAA,CAAAA,CAAG,OAAQ,CAAA,OAAA,CAAWgB,GAAU,CAC1BX,CAAAA,CAAa,OAEbtB,GAAAA,CAAAA,EACFA,EAAQiC,CAAK,CAAA,CAGX7B,CAAgBiB,EAAAA,CAAAA,CAAkB,QAAU3B,CAC9CwB,GAAAA,CAAAA,CAAe,QAAU,UAAW,CAAA,IAAM,CACxCG,CAAkB,CAAA,OAAA,EAAA,CAClBL,CAAkBK,CAAAA,CAAAA,CAAkB,OAAO,CAC3CU,CAAAA,CAAAA,GACF,CAAA,CAAGpC,CAAiB,CAExB,CAAA,EAAA,CAAA,CAEAsB,CAAG,CAAA,OAAA,CAAQ,UAAagB,CAAU,EAAA,CAChC,GAAI,CAAAX,CAAAA,CAAa,QAEjB,CAAIhB,GAAAA,CAAAA,EAAW,eAAmB2B,EAAAA,CAAAA,CAAM,OAAS3B,CAAU,CAAA,eAAA,CAAiB,CACtEc,CAAAA,CAAU,SACZ,YAAaA,CAAAA,CAAAA,CAAU,OAAO,CAAA,CAEhC,MACF,CAEA,GAAI,EAAAf,CAAU,EAAA,CAACA,EAAO4B,CAAK,CAAA,CAAA,CAI3B,CAAAvB,CAAAA,CAAeuB,CAAK,CACpBnB,CAAAA,CAAAA,CAAmBoB,CAAS,EAAA,CAAC,GAAGA,CAAMD,CAAAA,CAAK,CAAC,CAAA,CAE5C,GAAI,CACF,IAAME,EAAW,IAAK,CAAA,KAAA,CAAMF,EAAM,IAAI,CAAA,CACtCrB,CAAmBuB,CAAAA,CAAQ,EAC7B,CAAQ,KAAA,EAIJpC,CAAAA,EACFA,EAAUkC,CAAK,EAAA,CAAA,CAEnB,CAEAzB,CAAAA,CAAAA,CAAcS,EAAG,OAAQ,CAAA,UAAU,EACrC,CAAgB,KAAA,CACVjB,GACFA,CAAQ,CAAA,IAAI,KAAM,CAAA,4BAA4B,CAAC,EAEnD,CACF,CAAG,CAAA,CACDuB,EACApB,CACAV,CAAAA,CAAAA,CACAC,CACAC,CAAAA,CAAAA,CACAE,EACAC,CACAE,CAAAA,CAAAA,CACAD,EACAE,CACAC,CAAAA,CAAAA,CACAE,EACAC,CACAmB,CAAAA,CAAAA,CACAM,CACAxB,CAAAA,CACF,CAAC,CAEK8B,CAAAA,CAAAA,CAAazI,iBAAY,CAAA,CAAC0I,EAAO,GAAMC,CAAAA,CAAAA,CAAS,mBAAwB,GAAA,CACxEpB,EAAe,OACjB,EAAA,YAAA,CAAaA,EAAe,OAAO,CAAA,CAGrCY,GAEIb,CAAAA,CAAAA,CAAG,OAAWA,EAAAA,CAAAA,CAAG,QAAQ,UAAe,GAAA,SAAA,CAAU,QACpDA,CAAG,CAAA,OAAA,CAAQ,MAAMoB,CAAMC,CAAAA,CAAM,EAEjC,CAAA,CAAG,CAACR,CAAa,CAAC,EAEZS,CAAc5I,CAAAA,iBAAAA,CAAa8H,GAA+D,CAC1FR,CAAAA,CAAG,OAAWA,EAAAA,CAAAA,CAAG,QAAQ,UAAe,GAAA,SAAA,CAAU,IACpDA,CAAAA,CAAAA,CAAG,QAAQ,IAAKQ,CAAAA,CAAO,CAEvB,CAAA,OAAA,CAAQ,KAAK,gDAAgD,EAEjE,EAAG,EAAE,EAECe,CAAkB7I,CAAAA,iBAAAA,CAAa8H,CAAe,EAAA,CAClDc,EAAY,IAAK,CAAA,SAAA,CAAUd,CAAO,CAAC,EACrC,CAAG,CAAA,CAACc,CAAW,CAAC,EAEhB,OAAA3H,eAAAA,CAAU,KACR0G,CAAa,CAAA,OAAA,CAAU,MAElB1B,CACHmC,EAAAA,CAAAA,EAGK,CAAA,IAAM,CACXT,CAAa,CAAA,OAAA,CAAU,IACvBc,CAAAA,CAAAA,GACF,CACC,CAAA,CAAA,CAAC5C,CAAG,CAAC,EAER5E,eAAU,CAAA,IAAM,CACVqG,CAAG,CAAA,OAAA,EACLT,EAAcS,CAAG,CAAA,OAAA,CAAQ,UAAU,EAEvC,CAAC,CAEM,CAAA,CACL,YAAAsB,CACA,CAAA,eAAA,CAAAC,EACA,WAAA/B,CAAAA,CAAAA,CACA,eAAAE,CAAAA,CAAAA,CACA,WAAAJ,CACA,CAAA,OAAA,CAAAwB,EACA,UAAAK,CAAAA,CAAAA,CACA,eAAAvB,CACA,CAAA,cAAA,CAAAE,CACF,CACF,CCnQO,SAAS0B,EAAAA,CACdjD,EACAhH,CAAsB,CAAA,GACR,CACd,GAAM,CACJ,eAAA,CAAAkK,EAAkB,KAClB,CAAA,MAAA,CAAAC,CAAS,CAAA,GACT,SAAAlD,CAAAA,CAAAA,CAAY,IACZ,CAAA,iBAAA,CAAAE,EAAoB,GACpB,CAAA,iBAAA,CAAAD,EAAoB,CACpB,CAAA,MAAA,CAAAG,EACA,OAAAG,CAAAA,CAAAA,CACA,SAAAD,CAAAA,CAAAA,CACA,OAAAH,CAAS,CAAA,KAAA,CACT,kBAAAgD,CAAAA,CACF,EAAIpK,CAEE,CAAA,CAACqK,CAAMC,CAAAA,CAAO,EAAI5J,cAAmB,CAAA,IAAI,EACzC,CAACoG,CAAAA,CAAOyD,CAAQ,CAAI7J,CAAAA,cAAAA,CAAuB,IAAI,CAAA,CAC/C,CAACqH,CAAYC,CAAAA,CAAa,EAAItH,cAAiB,CAAA,WAAA,CAAY,MAAM,CACjE,CAAA,CAAC8J,CAAcC,CAAAA,CAAe,EAAI/J,cAA+D,CAAA,EAAE,CAEnGgK,CAAAA,CAAAA,CAAc5J,aAA2B,IAAI,CAAA,CAC7C4H,CAAiB5H,CAAAA,YAAAA,GACjByH,CAAiBzH,CAAAA,YAAAA,CAAO,CAAC,CAAA,CACzBgI,EAAehI,YAAO,CAAA,KAAK,CAE3BiI,CAAAA,CAAAA,CAAS5H,kBAAY,IAClB,OAAO6F,GAAQ,UAAaA,CAAAA,CAAAA,GAAQA,CAC1C,CAAA,CAACA,CAAG,CAAC,EAEFuC,CAAUpI,CAAAA,iBAAAA,CAAY,IAAM,CAChC,GAAI,EAAA2H,CAAAA,CAAa,OAAW4B,EAAAA,CAAAA,CAAY,SAExC,GAAI,CACF,IAAMC,CAAS5B,CAAAA,CAAAA,GACT/I,CAA2B,CAAA,CAC/B,eAAAkK,CAAAA,CAAAA,CACA,GAAGE,CACL,CAAA,CAEAM,CAAY,CAAA,OAAA,CAAU,IAAI,WAAYC,CAAAA,CAAAA,CAAQ3K,CAAO,CAAA,CACrDgI,EAAc0C,CAAY,CAAA,OAAA,CAAQ,UAAU,CAE5CA,CAAAA,CAAAA,CAAY,QAAQ,MAAS,CAAA,IAAM,CAC7B5B,CAAAA,CAAa,UAEjBd,CAAc,CAAA,WAAA,CAAY,IAAI,CAC9BuC,CAAAA,CAAAA,CAAS,IAAI,CACbhC,CAAAA,CAAAA,CAAe,OAAU,CAAA,CAAA,CAErBlB,GACFA,CAAO,EAAA,EAEX,EAEAqD,CAAY,CAAA,OAAA,CAAQ,QAAWjB,CAAU,EAAA,CACnCX,CAAa,CAAA,OAAA,GAEjByB,EAASd,CAAK,CAAA,CACdzB,CAAc0C,CAAAA,CAAAA,CAAY,QAAS,UAAU,CAAA,CAEzClD,CACFA,EAAAA,CAAAA,CAAQiC,CAAK,CAGXiB,CAAAA,CAAAA,CAAY,SAAS,UAAe,GAAA,WAAA,CAAY,SAClDA,CAAY,CAAA,OAAA,CAAU,IAElBzD,CAAAA,CAAAA,EAAasB,EAAe,OAAUrB,CAAAA,CAAAA,GACxCwB,CAAe,CAAA,OAAA,CAAU,WAAW,IAAM,CACxCH,CAAe,CAAA,OAAA,EAAA,CACfgB,IACF,CAAA,CAAGpC,EAAoB,IAAK,CAAA,GAAA,CAAI,IAAKoB,CAAe,CAAA,OAAO,CAAC,CAAA,CAAA,CAAA,EAGlE,EAEAmC,CAAY,CAAA,OAAA,CAAQ,SAAajB,CAAAA,CAAAA,EAAU,CACzC,GAAI,CAAAX,CAAa,CAAA,OAAA,CAEjB,IAAI,CACF,IAAM8B,EAAa,IAAK,CAAA,KAAA,CAAMnB,EAAM,IAAI,CAAA,CACxCa,CAAQM,CAAAA,CAAU,EAClBH,CAAiBf,CAAAA,CAAAA,EAAS,CAAC,GAAGA,CAAAA,CAAM,CAClC,KAAO,CAAA,SAAA,CACP,IAAMkB,CAAAA,CAAAA,CACN,UAAW,IAAK,CAAA,GAAA,EAClB,CAAC,CAAC,EACJ,CAAQ,KAAA,CACNN,CAAQb,CAAAA,CAAAA,CAAM,IAAS,CACvBgB,CAAAA,CAAAA,CAAiBf,CAAS,EAAA,CAAC,GAAGA,CAAM,CAAA,CAClC,KAAO,CAAA,SAAA,CACP,KAAMD,CAAM,CAAA,IAAA,CACZ,UAAW,IAAK,CAAA,GAAA,EAClB,CAAC,CAAC,EACJ,CAEIlC,GACFA,CAAUkC,CAAAA,CAAK,EAEnB,CAAA,CAAA,CAEAU,EAAO,OAASU,CAAAA,CAAAA,EAAc,CACxBH,CAAAA,CAAY,SACdA,CAAY,CAAA,OAAA,CAAQ,iBAAiBG,CAAYpB,CAAAA,CAAAA,EAAwB,CACvE,GAAI,CAAAX,CAAa,CAAA,OAAA,CAEjB,GAAI,CACF,IAAM8B,CAAa,CAAA,IAAA,CAAK,MAAMnB,CAAM,CAAA,IAAI,CACxCa,CAAAA,CAAAA,CAAQM,CAAU,CAClBH,CAAAA,CAAAA,CAAiBf,GAAS,CAAC,GAAGA,EAAM,CAClC,KAAA,CAAOmB,CACP,CAAA,IAAA,CAAMD,EACN,SAAW,CAAA,IAAA,CAAK,KAClB,CAAC,CAAC,EACJ,CAAA,KAAQ,CACNN,CAAAA,CAAQb,EAAM,IAAS,CAAA,CACvBgB,EAAiBf,CAAS,EAAA,CAAC,GAAGA,CAAM,CAAA,CAClC,KAAOmB,CAAAA,CAAAA,CACP,KAAMpB,CAAM,CAAA,IAAA,CACZ,SAAW,CAAA,IAAA,CAAK,KAClB,CAAC,CAAC,EACJ,CACF,CAAC,EAEL,CAAC,EACH,CAAA,KAAc,CACZc,CAAS,CAAA,IAAI,KAAM,CAAA,8BAA8B,CAAC,CAC9C/C,CAAAA,CAAAA,EACFA,CAAQ,CAAA,IAAI,MAAM,8BAA8B,CAAC,EAErD,CACF,EAAG,CACDuB,CAAAA,CACAmB,EACAE,CACAD,CAAAA,CAAAA,CACAlD,EACAC,CACAC,CAAAA,CAAAA,CACAE,CACAG,CAAAA,CAAAA,CACAD,CACF,CAAC,CAAA,CAEKqC,CAAazI,CAAAA,iBAAAA,CAAY,IAAM,CAC/BuH,CAAAA,CAAe,OACjB,EAAA,YAAA,CAAaA,EAAe,OAAO,CAAA,CAGjCgC,EAAY,OACdA,GAAAA,CAAAA,CAAY,QAAQ,KAAM,EAAA,CAC1BA,CAAY,CAAA,OAAA,CAAU,KACtB1C,CAAc,CAAA,WAAA,CAAY,MAAM,CAEpC,EAAA,CAAA,CAAG,EAAE,CAAA,CAEL,OAAA5F,eAAAA,CAAU,KACR0G,CAAa,CAAA,OAAA,CAAU,MAElB1B,CACHmC,EAAAA,CAAAA,GAGK,IAAM,CACXT,CAAa,CAAA,OAAA,CAAU,KACvBc,CAAW,GACb,CACC,CAAA,CAAA,CAAC5C,CAAG,CAAC,CAAA,CAED,CACL,IAAA,CAAAqD,EACA,KAAAvD,CAAAA,CAAAA,CACA,WAAAiB,CACA,CAAA,OAAA,CAAAwB,EACA,UAAAK,CAAAA,CAAAA,CACA,YAAAY,CAAAA,CACF,CACF,CC1KO,SAASM,GACd9D,CACAhH,CAAAA,CAAAA,CAA6B,EACX,CAAA,CAClB,GAAM,CACJ,SAAAkJ,CAAW,CAAA,GAAA,CACX,SAAA6B,CAAAA,CAAAA,CACA,QAAAvD,CACA,CAAA,YAAA,CAAAI,CAAe,CAAA,IAAA,CACf,WAAAoD,CAAa,CAAA,CAAA,CACb,WAAAC,CAAa,CAAA,GAAA,CACb,QAAAC,CAAU,CAAA,IAAA,CACV,SAAAC,CAAAA,CAAAA,CAAY,KACZ,WAAAC,CAAAA,CAAAA,CAAc,KACd,CAAA,aAAA,CAAAC,EACA,KAAAC,CAAAA,CAAAA,CAAQ,KACR,CAAA,SAAA,CAAAC,EAAY,GACZ,CAAA,OAAA,CAAAC,EACA,MAAAC,CAAAA,CAAAA,CAAS,MACT,IAAAC,CAAAA,CAAAA,CACA,MAAAC,CAAAA,CACF,EAAI3L,CAEE,CAAA,CAACqK,CAAMC,CAAAA,CAAO,EAAI5J,cAAmB,CAAA,IAAI,CACzC,CAAA,CAACoG,EAAOyD,CAAQ,CAAA,CAAI7J,eAAuB,IAAI,CAAA,CAC/C,CAACkL,CAASC,CAAAA,CAAU,CAAInL,CAAAA,cAAAA,CAAS,KAAK,CACtC,CAAA,CAACoL,CAAWC,CAAAA,CAAY,EAAIrL,cAAS,CAAA,KAAK,CAC1C,CAAA,CAACsL,EAAYC,CAAa,CAAA,CAAIvL,eAAsB,IAAI,CAAA,CACxD,CAACwL,CAAWC,CAAAA,CAAY,CAAIzL,CAAAA,cAAAA,CAAS,CAAC,CAEtC0L,CAAAA,CAAAA,CAAetL,YAAuB,EAAA,CACtCuL,EAAavL,YAAO,CAAA,CAAC,CACrBwL,CAAAA,CAAAA,CAAWxL,aAA8C,IAAI,CAAA,CAC7DyL,EAAkBzL,YAAwB,EAAA,CAC1CgI,EAAehI,YAAO,CAAA,KAAK,CAE3BiI,CAAAA,CAAAA,CAAS5H,kBAAY,SACR,OAAO6F,GAAQ,UAAa,CAAA,MAAMA,GAAQA,CAAAA,CAAAA,CAE1D,CAACA,CAAG,CAAC,CAEFwF,CAAAA,CAAAA,CAAYrL,kBAAY,SAAY,CACxC,GAAI,CAAA2H,CAAAA,CAAa,OAEjB,CAAA,CAAA,GAAIwC,GAASgB,CAAS,CAAA,OAAA,EACR,IAAK,CAAA,GAAA,GACPA,CAAS,CAAA,OAAA,CAAQ,SAAYf,CAAAA,CAAAA,CACrC,OAAAjB,CAAQgC,CAAAA,CAAAA,CAAS,QAAQ,IAAI,CAAA,CAC7BL,EAAc,IAAI,IAAA,CAAKK,CAAS,CAAA,OAAA,CAAQ,SAAS,CAAC,CAAA,CAC3CA,CAAS,CAAA,OAAA,CAAQ,KAI5BT,CAAW,CAAA,IAAI,CACftB,CAAAA,CAAAA,CAAS,IAAI,CAEb,CAAA,GAAI,CACFgC,CAAgB,CAAA,OAAA,CAAU,IAAI,eAC9B,CAAA,IAAME,CAAcd,CAAAA,CAAAA,EAAUY,EAAgB,OAAQ,CAAA,MAAA,CAEhDG,CAAW,CAAA,MAAM3D,GACjB4D,CAAAA,CAAAA,CAAW,MAAM,KAAA,CAAMD,EAAU,CACrC,MAAA,CAAAjB,EACA,OAAAD,CAAAA,CAAAA,CACA,KAAME,CAAO,CAAA,IAAA,CAAK,SAAUA,CAAAA,CAAI,EAAI,KACpC,CAAA,CAAA,MAAA,CAAQe,CACV,CAAC,CAAA,CAED,GAAI,CAACE,CAAAA,CAAS,EACZ,CAAA,MAAM,IAAI,KAAM,CAAA,CAAA,oBAAA,EAAuBA,EAAS,MAAM,CAAA,CAAE,EAG1D,IAAMC,CAAAA,CAAe,MAAMD,CAAAA,CAAS,MAEpC,CAAA,OAAI7D,CAAa,CAAA,OAAA,CAAS,QAE1BwB,CAAQsC,CAAAA,CAAY,CACpBX,CAAAA,CAAAA,CAAc,IAAI,IAAM,CAAA,CACxBE,EAAczC,EAASA,EAAAA,EAAAA,CAAO,CAAC,CAC/B2C,CAAAA,CAAAA,CAAW,OAAU,CAAA,CAAA,CAEjBf,IACFgB,CAAS,CAAA,OAAA,CAAU,CACjB,IAAA,CAAMM,EACN,SAAW,CAAA,IAAA,CAAK,GAAI,EACtB,GAGE7B,CACFA,EAAAA,CAAAA,CAAU6B,CAAY,CAGpBvB,CAAAA,CAAAA,EAAiBA,EAAcuB,CAAY,CAAA,EAC7CC,CAAK,EAAA,CAGAD,EACT,CAASE,MAAAA,CAAAA,CAAK,CACZ,GAAIhE,EAAa,OAAS,CAAA,OAE1B,IAAMhC,CAAAA,CAAQgG,aAAe,KAAQA,CAAAA,CAAAA,CAAM,IAAI,KAAM,CAAA,eAAe,EAEhEhG,CAAM,CAAA,IAAA,GAAS,YACjByD,GAAAA,CAAAA,CAASzD,CAAK,CAEVU,CAAAA,CAAAA,EACFA,EAAQV,CAAK,CAAA,CAGXsE,EACFyB,CAAK,EAAA,CACIjF,CAAgByE,EAAAA,CAAAA,CAAW,QAAUrB,CAC9CqB,GAAAA,CAAAA,CAAW,UACX,UAAW,CAAA,IAAM,CACVvD,CAAa,CAAA,OAAA,EAChB0D,CAAU,GAEd,EAAGvB,CAAaoB,CAAAA,CAAAA,CAAW,OAAO,CAAA,CAAA,EAGxC,QAAE,CACKvD,CAAAA,CAAa,OAChB+C,EAAAA,CAAAA,CAAW,KAAK,EAEpB,CAAA,CACF,EAAG,CACD9C,CAAAA,CACA0C,EACAD,CACAE,CAAAA,CAAAA,CACAC,CACAL,CAAAA,CAAAA,CACAC,EACAR,CACAvD,CAAAA,CAAAA,CACA6D,CACAD,CAAAA,CAAAA,CACAxD,EACAoD,CACAC,CAAAA,CACF,CAAC,CAAA,CAEK8B,EAAQ5L,iBAAY,CAAA,IAAM,CAC9B,GAAI2H,CAAAA,CAAa,SAAWgD,CAAW,CAAA,OAEvCC,CAAa,CAAA,IAAI,EACjBI,CAAa,CAAA,CAAC,CACdE,CAAAA,CAAAA,CAAW,QAAU,CAErB,CAAA,IAAMW,CAAO,CAAA,SAAY,CACvB,MAAMR,CAAAA,GAEF,CAAC1D,CAAAA,CAAa,SAAWgD,CAC3BM,GAAAA,CAAAA,CAAa,OAAU,CAAA,UAAA,CAAWY,EAAM9D,CAAQ,CAAA,EAEpD,EAEIiC,CACF6B,CAAAA,CAAAA,GAEAZ,CAAa,CAAA,OAAA,CAAU,UAAWY,CAAAA,CAAAA,CAAM9D,CAAQ,EAEpD,CAAA,CAAG,CAACsD,CAAWtD,CAAAA,CAAAA,CAAUiC,EAAWW,CAAS,CAAC,CAExCe,CAAAA,CAAAA,CAAO1L,kBAAY,IAAM,CAC7B4K,CAAa,CAAA,KAAK,EAEdK,CAAa,CAAA,OAAA,EACf,YAAaA,CAAAA,CAAAA,CAAa,OAAO,CAG/BG,CAAAA,CAAAA,CAAgB,SAClBA,CAAgB,CAAA,OAAA,CAAQ,QAE5B,CAAA,CAAG,EAAE,EAECU,CAAQ9L,CAAAA,iBAAAA,CAAY,IAAM,CAC9BkL,EAAW,OAAU,CAAA,CAAA,CACrBG,CAAU,GACZ,EAAG,CAACA,CAAS,CAAC,CAEd,CAAA,OAAApK,gBAAU,KACR0G,CAAAA,CAAa,OAAU,CAAA,KAAA,CAEnBoC,GACF6B,CAAM,EAAA,CAGD,IAAM,CACXjE,EAAa,OAAU,CAAA,IAAA,CACvB+D,CAAK,GACP,GACC,CAAC3B,CAAO,CAAC,CAEL,CAAA,CACL,KAAAb,CACA,CAAA,KAAA,CAAAvD,CACA,CAAA,OAAA,CAAA8E,EACA,KAAAmB,CAAAA,CAAAA,CACA,KAAAF,CACA,CAAA,SAAA,CAAAf,EACA,UAAAE,CAAAA,CAAAA,CACA,SAAAE,CAAAA,CAAAA,CACA,MAAAe,CACF,CACF,CCrOO,SAASC,EAAAA,CACdC,CACAhC,CAAAA,CAAAA,CAAqB,KACF,CACnB,GAAM,CAACjG,CAAAA,CAAOkI,CAAQ,CAAI1M,CAAAA,cAAAA,CAAwB,CAChD,OAASyK,CAAAA,CAAAA,CACT,MAAO,IACP,CAAA,IAAA,CAAM,IACR,CAAC,EAEKkC,CAAUlM,CAAAA,iBAAAA,CAAY,SAAY,CACtCiM,EAAS,CAAE,OAAA,CAAS,IAAM,CAAA,KAAA,CAAO,KAAM,IAAM,CAAA,IAAK,CAAC,CAEnD,CAAA,GAAI,CACF,IAAM/C,CAAAA,CAAO,MAAM8C,CAAAA,GACnBC,CAAS,CAAA,CAAE,OAAS,CAAA,CAAA,CAAA,CAAO,MAAO,IAAM,CAAA,IAAA,CAAA/C,CAAK,CAAC,EAChD,CAASvD,MAAAA,CAAAA,CAAO,CACdsG,CAAS,CAAA,CAAE,QAAS,KAAO,CAAA,KAAA,CAAOtG,CAAgB,CAAA,IAAA,CAAM,IAAK,CAAC,EAChE,CACF,CAAG,CAAA,CAACqG,CAAa,CAAC,CAAA,CAElB,OAAA/K,eAAAA,CAAU,IAAM,CACV+I,CAAAA,EACFkC,IAEJ,CAAA,CAAG,CAACA,CAASlC,CAAAA,CAAS,CAAC,CAAA,CAEhB,CAAE,OAAAkC,CAAAA,CAAAA,CAAS,GAAGnI,CAAM,CAC7B,CC5BO,SAASoI,EAAAA,CACdtG,CACAhH,CAAAA,CAAAA,CACmB,CACnB,GAAM,CAACkF,CAAOkI,CAAAA,CAAQ,EAAI1M,cAAwB,CAAA,CAChD,IAAM,CAAA,IAAA,CACN,QAASV,CAAS,EAAA,SAAA,GAAc,MAChC,KAAO,CAAA,IACT,CAAC,CAEKuN,CAAAA,CAAAA,CAAqBzM,YAA+B,CAAA,IAAI,EAExD0L,CAAYrL,CAAAA,iBAAAA,CAAY,SAAY,CACxCiM,EAAS1D,CAAS,GAAA,CAAE,GAAGA,CAAAA,CAAM,QAAS,IAAM,CAAA,KAAA,CAAO,IAAK,CAAE,CAAA,CAAA,CAGtD6D,EAAmB,OACrBA,EAAAA,CAAAA,CAAmB,OAAQ,CAAA,KAAA,GAI7BA,CAAmB,CAAA,OAAA,CAAU,IAAI,eAEjC,CAAA,GAAI,CACF,IAAMZ,CAAAA,CAAW,MAAM,KAAA,CAAM3F,EAAK,CAChC,GAAGhH,EACH,MAAQuN,CAAAA,CAAAA,CAAmB,QAAQ,MACrC,CAAC,CAED,CAAA,GAAI,CAACZ,CAAS,CAAA,EAAA,CACZ,MAAM,IAAI,MAAM,CAAuBA,oBAAAA,EAAAA,CAAAA,CAAS,MAAM,CAAA,CAAE,EAG1D,IAAMtC,CAAAA,CAAO,MAAMsC,CAAS,CAAA,IAAA,GAC5BS,CAAS,CAAA,CAAE,IAAA/C,CAAAA,CAAAA,CAAM,QAAS,CAAO,CAAA,CAAA,KAAA,CAAO,IAAK,CAAC,EAChD,CAASvD,MAAAA,CAAAA,CAAO,CACTA,CAAAA,CAAgB,OAAS,YAC5BsG,EAAAA,CAAAA,CAAS,CAAE,IAAM,CAAA,IAAA,CAAM,QAAS,KAAO,CAAA,KAAA,CAAOtG,CAAe,CAAC,EAElE,CACF,CAAA,CAAG,CAACE,CAAAA,CAAKhH,CAAO,CAAC,CAAA,CAEjB,OAAAoC,eAAAA,CAAU,KACJpC,CAAS,EAAA,SAAA,GAAc,OACzBwM,CAAU,EAAA,CAGL,IAAM,CACXe,CAAAA,CAAmB,OAAS,EAAA,KAAA,GAC9B,CACC,CAAA,CAAA,CAACf,CAAWxM,CAAAA,CAAAA,EAAS,SAAS,CAAC,CAAA,CAE3B,CAAE,GAAGkF,EAAO,OAASsH,CAAAA,CAAU,CACxC,CCpCA,IAAMgB,GAAgC,CACpC,KAAA,CAAO,CACP,CAAA,MAAA,CAAQ,EACR,GAAK,CAAA,CAAA,CACL,KAAM,CACN,CAAA,MAAA,CAAQ,EACR,KAAO,CAAA,CAAA,CACP,CAAG,CAAA,CAAA,CACH,EAAG,CACL,CAAA,CAEO,SAASC,EAAAA,CACdzN,EAA6B,EAAC,CACT,CACrB,GAAM,CACJ,QAAA0N,CAAAA,CAAAA,CAAW,EACX,MAAAC,CAAAA,CAAAA,CAAS,KACT,MAAAC,CAAAA,CAAAA,CAAS,IACT,CAAA,UAAA,CAAAC,EAAa,KACf,CAAA,CAAI7N,CAEE,CAAA,CAAC8N,EAAYC,CAAa,CAAA,CAAIrN,cAAqB8M,CAAAA,EAAiB,EACpE,CAACQ,CAAAA,CAAMC,CAAO,CAAIvN,CAAAA,cAAAA,CAAmB,IAAI,CAEzCwN,CAAAA,CAAAA,CAAcpN,YAA8B,CAAA,IAAI,EAChDqN,CAASrN,CAAAA,YAAAA,GACTsN,CAAatN,CAAAA,YAAAA,GAEbuN,CAAUlN,CAAAA,iBAAAA,CAAY,IAAM,CAChC,GAAI,CAAC6M,CAAAA,CAAM,OAEX,IAAMM,CAAAA,CAAON,EAAK,qBAAsB,EAAA,CAElCO,CAA4B,CAAA,CAChC,MAAOV,CAAaG,CAAAA,CAAAA,CAAK,WAAcM,CAAAA,CAAAA,CAAK,MAC5C,MAAQT,CAAAA,CAAAA,CAAaG,CAAK,CAAA,YAAA,CAAeM,EAAK,MAC9C,CAAA,GAAA,CAAKA,EAAK,GACV,CAAA,IAAA,CAAMA,EAAK,IACX,CAAA,MAAA,CAAQA,CAAK,CAAA,MAAA,CACb,MAAOA,CAAK,CAAA,KAAA,CACZ,CAAGA,CAAAA,CAAAA,CAAK,EACR,CAAGA,CAAAA,CAAAA,CAAK,CACV,CAAA,CAEAP,EAAcS,CAEVA,EAAAA,CAAAA,CAAe,QAAUD,CAAc,CAAA,KAAA,EACvCC,EAAe,MAAWD,GAAAA,CAAAA,CAAc,MACxCC,EAAAA,CAAAA,CAAe,MAAQD,CAAc,CAAA,GAAA,EACrCC,CAAe,CAAA,IAAA,GAASD,EAAc,IACtCC,EAAAA,CAAAA,CAAe,MAAWD,GAAAA,CAAAA,CAAc,QACxCC,CAAe,CAAA,KAAA,GAAUD,EAAc,KACvCC,EAAAA,CAAAA,CAAe,IAAMD,CAAc,CAAA,CAAA,EACnCC,CAAe,CAAA,CAAA,GAAMD,EAAc,CAE5BA,CAAAA,CAAAA,CAEFC,CACR,EACH,CAAA,CAAG,CAACR,CAAMH,CAAAA,CAAU,CAAC,CAAA,CAEfY,EAAsBtN,iBAAY,CAAA,IAAM,CACxCiN,CAAW,CAAA,OAAA,EACb,aAAaA,CAAW,CAAA,OAAO,CAG7BV,CAAAA,CAAAA,CAAW,EACbU,CAAW,CAAA,OAAA,CAAU,UAAW,CAAA,IAAM,CACpCC,CAAQ,GACV,CAAGX,CAAAA,CAAQ,GAEPS,CAAO,CAAA,OAAA,EACT,qBAAqBA,CAAO,CAAA,OAAO,EAErCA,CAAO,CAAA,OAAA,CAAU,qBAAsB,CAAA,IAAM,CAC3CE,CAAQ,GACV,CAAC,CAAA,EAEL,EAAG,CAACA,CAAAA,CAASX,CAAQ,CAAC,EAEhB9J,CAAMzC,CAAAA,iBAAAA,CAAauN,GAAsB,CAgB7C,GAfIR,EAAY,OACdA,GAAAA,CAAAA,CAAY,OAAQ,CAAA,UAAA,GACpBA,CAAY,CAAA,OAAA,CAAU,IAGpBC,CAAAA,CAAAA,CAAAA,CAAO,SACT,oBAAqBA,CAAAA,CAAAA,CAAO,OAAO,CAAA,CAGjCC,EAAW,OACb,EAAA,YAAA,CAAaA,EAAW,OAAO,CAAA,CAGjCH,EAAQS,CAAO,CAAA,CAEX,CAACA,CAAAA,CAAS,CACZX,CAAcP,CAAAA,EAAiB,EAC/B,MACF,CAEAa,GAEI,CAAA,OAAO,cAAmB,CAAA,GAAA,GAC5BH,EAAY,OAAU,CAAA,IAAI,eAAgBS,CAAY,EAAA,CAChDA,EAAQ,MAAS,CAAA,CAAA,EACnBF,CAAoB,GAExB,CAAC,CACDP,CAAAA,CAAAA,CAAY,OAAQ,CAAA,OAAA,CAAQQ,CAAO,CAEvC,EAAA,CAAA,CAAG,CAACL,CAAAA,CAASI,CAAmB,CAAC,CAAA,CAEjC,OAAArM,eAAU,CAAA,IAAM,CACd,GAAI,CAAC4L,CAAM,CAAA,OAEX,IAAM1L,CAAeqL,CAAAA,CAAAA,CAASc,CAAsB,CAAA,MAAA,CAC9CG,EAAehB,CAASa,CAAAA,CAAAA,CAAsB,MAEpD,CAAA,OAAInM,IACF,MAAO,CAAA,gBAAA,CAAiB,SAAUA,CAAc,CAAA,CAAE,QAAS,IAAK,CAAC,CAC7D0L,CAAAA,CAAAA,CAAK,eACPA,CAAK,CAAA,aAAA,CAAc,gBAAiB,CAAA,QAAA,CAAU1L,EAAc,CAAE,OAAA,CAAS,IAAK,CAAC,GAI7EsM,CACF,EAAA,MAAA,CAAO,iBAAiB,QAAUA,CAAAA,CAAY,EAGzC,IAAM,CACPtM,CACF,GAAA,MAAA,CAAO,oBAAoB,QAAUA,CAAAA,CAAY,EAC7C0L,CAAK,CAAA,aAAA,EACPA,EAAK,aAAc,CAAA,mBAAA,CAAoB,QAAU1L,CAAAA,CAAY,GAI7DsM,CACF,EAAA,MAAA,CAAO,oBAAoB,QAAUA,CAAAA,CAAY,EAErD,CACF,CAAA,CAAG,CAACZ,CAAAA,CAAML,EAAQC,CAAQa,CAAAA,CAAmB,CAAC,CAAA,CAE9CrM,gBAAU,IACD,IAAM,CACP8L,CAAAA,CAAY,SACdA,CAAY,CAAA,OAAA,CAAQ,YAGlBC,CAAAA,CAAAA,CAAO,SACT,oBAAqBA,CAAAA,CAAAA,CAAO,OAAO,CAAA,CAGjCC,EAAW,OACb,EAAA,YAAA,CAAaA,CAAW,CAAA,OAAO,EAEnC,CACC,CAAA,EAAE,CAAA,CAEE,CAACxK,CAAKkK,CAAAA,CAAAA,CAAYE,CAAI,CAC/B,CC5KA,IAAMa,EAAAA,CAAY,OAAO,MAAW,CAAA,GAAA,CAE7B,SAASC,EAAAA,CAAc9O,EAA6B,EAAC,CAAqB,CAC/E,GAAM,CACJ,SAAA+O,CAAW,CAAA,KAAA,CACX,UAAAC,CAAAA,CAAAA,CACA,qBAAAC,CAAuB,CAAA,IACzB,EAAIjP,CAEEkP,CAAAA,CAAAA,CAAiBpO,aAAe,CAAC,CAAA,CACjCqO,CAAgBrO,CAAAA,YAAAA,CAA2B,IAAI,CAC/CsO,CAAAA,CAAAA,CAAiBtO,aAGpB,EAAE,EACCuO,CAAcvO,CAAAA,YAAAA,CAAO,KAAK,CAAA,CAE1BwO,EAAoBnO,iBAAY,CAAA,IAAM,CAC1C,GAAI0N,GAAW,OAAO,CAAA,CAEtB,IAAMU,CAAAA,CAAQ,SAAS,aAAc,CAAA,KAAK,EAC1CA,CAAM,CAAA,KAAA,CAAM,WAAa,QACzBA,CAAAA,CAAAA,CAAM,KAAM,CAAA,QAAA,CAAW,SACvBA,CAAM,CAAA,KAAA,CAAM,eAAkB,CAAA,WAAA,CAC9B,SAAS,IAAK,CAAA,WAAA,CAAYA,CAAK,CAAA,CAE/B,IAAMC,CAAQ,CAAA,QAAA,CAAS,cAAc,KAAK,CAAA,CAC1CD,EAAM,WAAYC,CAAAA,CAAK,CAEvB,CAAA,IAAMC,EAAiBF,CAAM,CAAA,WAAA,CAAcC,CAAM,CAAA,WAAA,CACjD,OAAAD,CAAM,CAAA,UAAA,EAAY,WAAYA,CAAAA,CAAK,EAE5BE,CACT,CAAA,CAAG,EAAE,CAAA,CAECC,EAAmBvO,iBAAY,CAAA,IAC/B6N,CACE,CAAA,OAAOA,GAAe,UACjBA,CAAAA,CAAAA,IAAgB,QAAS,CAAA,IAAA,CAE3BA,EAEF,QAAS,CAAA,IAAA,CACf,CAACA,CAAU,CAAC,CAETW,CAAAA,CAAAA,CAAOxO,kBAAY,IAAM,CAC7B,GAAI0N,EAAaQ,EAAAA,CAAAA,CAAY,OAAS,CAAA,OAEtC,IAAM7M,CAASkN,CAAAA,CAAAA,EACfP,CAAAA,CAAAA,CAAc,QAAU3M,CAExB,CAAA,IAAMoN,CAAepN,CAAAA,CAAAA,GAAW,SAAS,IACrC,CAAA,MAAA,CAAO,WAAa,QAAS,CAAA,eAAA,CAAgB,YAC7CA,CAAO,CAAA,YAAA,CAAeA,CAAO,CAAA,YAAA,CASjC,GAPA4M,CAAe,CAAA,OAAA,CAAU,CACvB,QAAA,CAAU5M,EAAO,KAAM,CAAA,QAAA,CACvB,YAAcA,CAAAA,CAAAA,CAAO,MAAM,YAC7B,CAAA,CAEAA,EAAO,KAAM,CAAA,QAAA,CAAW,SAEpByM,CAAwBW,EAAAA,CAAAA,CAAc,CACpCV,CAAAA,CAAe,UAAY,CAC7BA,GAAAA,CAAAA,CAAe,OAAUI,CAAAA,CAAAA,IAG3B,IAAMO,CAAAA,CAAsB,QAC1B,CAAA,MAAA,CAAO,iBAAiBrN,CAAM,CAAA,CAAE,cAAgB,GAChD,CAAA,EACF,EAEAA,CAAO,CAAA,KAAA,CAAM,YAAe,CAAA,CAAA,EAAGqN,EAAsBX,CAAe,CAAA,OAAO,KAC7E,CAEAG,CAAAA,CAAY,QAAU,IAElB7M,CAAAA,CAAAA,GAAW,QAAS,CAAA,IAAA,GACtB,SAAS,eAAgB,CAAA,KAAA,CAAM,SAAW,QAE9C,EAAA,CAAA,CAAG,CAACkN,CAAkBT,CAAAA,CAAAA,CAAsBK,CAAiB,CAAC,EAExDQ,CAAS3O,CAAAA,iBAAAA,CAAY,IAAM,CAC/B,GAAI0N,EAAa,EAAA,CAACQ,CAAY,CAAA,OAAA,EAAW,CAACF,CAAc,CAAA,OAAA,CAAS,OAEjE,IAAM3M,CAAAA,CAAS2M,EAAc,OAEzBC,CAAAA,CAAAA,CAAe,OAAQ,CAAA,QAAA,GAAa,SACtC5M,CAAO,CAAA,KAAA,CAAM,QAAW4M,CAAAA,CAAAA,CAAe,QAAQ,QAG7CA,CAAAA,CAAAA,CAAAA,CAAe,OAAQ,CAAA,YAAA,GAAiB,SAC1C5M,CAAO,CAAA,KAAA,CAAM,aAAe4M,CAAe,CAAA,OAAA,CAAQ,cAGjD5M,CAAW,GAAA,QAAA,CAAS,IACtB,GAAA,QAAA,CAAS,gBAAgB,KAAM,CAAA,QAAA,CAAW,EAG5C6M,CAAAA,CAAAA,CAAAA,CAAY,QAAU,KACtBD,CAAAA,CAAAA,CAAe,OAAU,CAAA,GAC3B,CAAG,CAAA,EAAE,CAECW,CAAAA,CAAAA,CAAS5O,kBAAY,IAAM,CAC3BkO,CAAY,CAAA,OAAA,CACdS,GAEAH,CAAAA,CAAAA,GAEJ,CAAA,CAAG,CAACA,CAAMG,CAAAA,CAAM,CAAC,CAAA,CAEjB,OAAA1N,eAAU,CAAA,KACJ2M,GACFY,CAAK,EAAA,CAGA,IAAM,CACXG,CAAAA,GACF,CAAA,CAAA,CACC,CAACf,CAAQ,CAAC,CAEN,CAAA,CACL,KAAAY,CACA,CAAA,MAAA,CAAAG,CACA,CAAA,MAAA,CAAAC,EACA,QAAUV,CAAAA,CAAAA,CAAY,OACxB,CACF,CCvIO,SAASW,EAAAA,CACdC,CAC4B,CAAA,CAC5B,IAAMrM,CAAM9C,CAAAA,YAAAA,CAAiB,IAAI,CAAA,CAEjC,OAAAsB,eAAU,CAAA,IAAM,CACd,IAAM8N,CAAAA,CAAezG,GAAmC,CAClD7F,CAAAA,CAAI,OAAW,EAAA,CAACA,EAAI,OAAQ,CAAA,QAAA,CAAS6F,CAAM,CAAA,MAAc,GAC3DwG,CAAYxG,CAAAA,CAAK,EAErB,CAAA,CAEA,gBAAS,gBAAiB,CAAA,OAAA,CAASyG,CAAW,CAC9C,CAAA,QAAA,CAAS,iBAAiB,YAAcA,CAAAA,CAAW,CAE5C,CAAA,IAAM,CACX,QAAS,CAAA,mBAAA,CAAoB,QAASA,CAAW,CAAA,CACjD,SAAS,mBAAoB,CAAA,YAAA,CAAcA,CAAW,EACxD,CACF,CAAG,CAAA,CAACD,CAAW,CAAC,CAAA,CAETrM,CACT,CCtBO,SAASuM,EAAAA,CACdvM,CACAwM,CAAAA,CAAAA,CACM,CACNhO,eAAU,CAAA,IAAM,CACd,IAAMiO,EAAY5G,CAAmC,EAAA,CAC/C,CAAC7F,CAAI,CAAA,OAAA,EAAWA,EAAI,OAAQ,CAAA,QAAA,CAAS6F,CAAM,CAAA,MAAc,GAG7D2G,CAAQ3G,CAAAA,CAAK,EACf,CAAA,CAEA,gBAAS,gBAAiB,CAAA,WAAA,CAAa4G,CAAQ,CAAA,CAC/C,SAAS,gBAAiB,CAAA,YAAA,CAAcA,CAAQ,CAEzC,CAAA,IAAM,CACX,QAAS,CAAA,mBAAA,CAAoB,WAAaA,CAAAA,CAAQ,EAClD,QAAS,CAAA,mBAAA,CAAoB,YAAcA,CAAAA,CAAQ,EACrD,CACF,CAAA,CAAG,CAACzM,CAAAA,CAAKwM,CAAO,CAAC,EACnB,CCrBO,SAASE,EAGd,EAAA,CACA,GAAM,CAACC,CAAAA,CAAYC,CAAa,CAAA,CAAI9P,eAAkB,KAAK,CAAA,CACrDkD,EAAM9C,YAAiB,CAAA,IAAI,EAE3B2P,CAAmBtP,CAAAA,iBAAAA,CAAY,IAAMqP,CAAAA,CAAc,IAAI,CAAG,CAAA,EAAE,CAAA,CAC5DE,EAAmBvP,iBAAY,CAAA,IAAMqP,CAAc,CAAA,KAAK,EAAG,EAAE,EAEnE,OAAApO,eAAAA,CAAU,IAAM,CACd,IAAMuO,CAAU/M,CAAAA,CAAAA,CAAI,QACpB,GAAK+M,CAAAA,CAEL,OAAAA,CAAAA,CAAQ,iBAAiB,YAAcF,CAAAA,CAAgB,CACvDE,CAAAA,CAAAA,CAAQ,iBAAiB,YAAcD,CAAAA,CAAgB,EAEhD,IAAM,CACXC,EAAQ,mBAAoB,CAAA,YAAA,CAAcF,CAAgB,CAAA,CAC1DE,EAAQ,mBAAoB,CAAA,YAAA,CAAcD,CAAgB,EAC5D,CACF,CAAG,CAAA,CAACD,CAAkBC,CAAAA,CAAgB,CAAC,CAEhC,CAAA,CAAC9M,EAAK2M,CAAU,CACzB,CCrBO,SAASK,GACdhN,CACA5D,CAAAA,CAAAA,CACuC,CACvC,GAAM,CAAC6Q,CAAOC,CAAAA,CAAQ,EAAIpQ,cAAoC,EAAA,CAE9D,OAAA0B,eAAU,CAAA,IAAM,CACd,GAAI,CAACwB,CAAI,CAAA,OAAA,EAAW,EAAE,sBAA0B,GAAA,MAAA,CAAA,CAAS,OAEzD,IAAMmN,EAAW,IAAI,oBAAA,CACnB,CAAC,CAACF,CAAK,CAAMC,GAAAA,CAAAA,CAASD,CAAK,CAC3B7Q,CAAAA,CACF,EAEA,OAAA+Q,CAAAA,CAAS,OAAQnN,CAAAA,CAAAA,CAAI,OAAO,CAErB,CAAA,IAAM,CACXmN,CAAAA,CAAS,aACX,CACF,CAAG,CAAA,CAACnN,EAAK5D,CAAS,EAAA,SAAA,CAAWA,GAAS,IAAMA,CAAAA,CAAAA,EAAS,UAAU,CAAC,CAAA,CAEzD6Q,CACT,CCzBO,SAASG,EAAAA,EAAmD,CACjE,GAAM,CAACC,CAAYC,CAAAA,CAAa,EAAIxQ,cAA4C,CAAA,CAC9E,MAAO,OAAO,MAAA,CAAW,GAAc,CAAA,MAAA,CAAO,WAAa,CAC3D,CAAA,MAAA,CAAQ,OAAO,MAAW,CAAA,GAAA,CAAc,OAAO,WAAc,CAAA,CAC/D,CAAC,CAAA,CAED,OAAA0B,eAAU,CAAA,IAAM,CACd,IAAMwM,CAAAA,CAAe,IAAM,CACzBsC,CAAAA,CAAc,CACZ,KAAA,CAAO,OAAO,UACd,CAAA,MAAA,CAAQ,MAAO,CAAA,WACjB,CAAC,EACH,CAAA,CAEA,OAAO,MAAA,CAAA,gBAAA,CAAiB,SAAUtC,CAAY,CAAA,CAC9CA,GAEO,CAAA,IAAM,OAAO,mBAAoB,CAAA,QAAA,CAAUA,CAAY,CAChE,EAAG,EAAE,CAEEqC,CAAAA,CACT,CCpBO,SAASE,GAAcC,CAAwB,CAAA,CACpD,GAAM,CAACC,CAAAA,CAASC,CAAU,CAAA,CAAI5Q,eAAkB,IAC1C,OAAO,MAAW,CAAA,GAAA,CACb,OAAO,UAAW0Q,CAAAA,CAAK,CAAE,CAAA,OAAA,CAE3B,KACR,CAED,CAAA,OAAAhP,gBAAU,IAAM,CACd,IAAMmP,CAAa,CAAA,MAAA,CAAO,UAAWH,CAAAA,CAAK,EACpCI,CAAgB/H,CAAAA,CAAAA,EAA+B,CACnD6H,CAAW7H,CAAAA,CAAAA,CAAM,OAAO,EAC1B,CAAA,CAMA,OAHA6H,CAAAA,CAAWC,EAAW,OAAO,CAAA,CAGzBA,EAAW,gBACbA,EAAAA,CAAAA,CAAW,iBAAiB,QAAUC,CAAAA,CAAY,CAC3C,CAAA,IAAMD,EAAW,mBAAoB,CAAA,QAAA,CAAUC,CAAY,CAAA,GAIlED,EAAW,WAAYC,CAAAA,CAAY,CAC5B,CAAA,IAAMD,EAAW,cAAeC,CAAAA,CAAY,EAEvD,CAAG,CAAA,CAACJ,CAAK,CAAC,CAAA,CAEHC,CACT,CC5BO,SAASI,EAAAA,CACd5G,CACAuF,CAAAA,CAAAA,CACAO,EACA3Q,CACM,CAAA,CACN,IAAM0R,CAAe5Q,CAAAA,YAAAA,GAErBsB,eAAU,CAAA,IAAM,CACdsP,CAAAA,CAAa,QAAUtB,EACzB,CAAA,CAAG,CAACA,CAAO,CAAC,CAEZhO,CAAAA,eAAAA,CAAU,IAAM,CACd,IAAM+M,CAAsCwB,CAAAA,CAAAA,EAAS,SAAW,MAChE,CAAA,GAAI,EAAExB,CAAiBA,EAAAA,CAAAA,CAAc,gBACnC,CAAA,CAAA,OAGF,IAAMwC,CAAiBlI,CAAAA,CAAAA,EAAiBiI,EAAa,OAAUjI,GAAAA,CAA0B,EAEzF,OAAA0F,CAAAA,CAAc,gBAAiBtE,CAAAA,CAAAA,CAAW8G,EAAe3R,CAAO,CAAA,CAEzD,IAAM,CACXmP,CAAAA,CAAc,oBAAoBtE,CAAW8G,CAAAA,CAAAA,CAAe3R,CAAO,EACrE,CACF,CAAG,CAAA,CAAC6K,CAAW8F,CAAAA,CAAAA,CAAS3Q,CAAO,CAAC,EAClC,CC3BO,SAAS4R,GAAezO,CAAU0O,CAAAA,CAAAA,CAAkB,CACzD,GAAM,CAACC,CAAgBC,CAAAA,CAAiB,CAAIrR,CAAAA,cAAAA,CAAYyC,CAAK,CAE7D,CAAA,OAAAf,eAAU,CAAA,IAAM,CACd,IAAMgO,CAAAA,CAAU,WAAW,IAAM,CAC/B2B,EAAkB5O,CAAK,EACzB,CAAG0O,CAAAA,CAAK,EAER,OAAO,IAAM,CACX,YAAA,CAAazB,CAAO,EACtB,CACF,CAAG,CAAA,CAACjN,EAAO0O,CAAK,CAAC,EAEVC,CACT,CCdO,SAASE,EAAe7O,CAAAA,CAAAA,CAAU8O,EAAkB,CACzD,GAAM,CAACC,CAAAA,CAAgBC,CAAiB,CAAIzR,CAAAA,cAAAA,CAAYyC,CAAK,CACvDiP,CAAAA,CAAAA,CAAUtR,aAAe,IAAK,CAAA,GAAA,EAAK,CAAA,CAEzC,OAAAsB,eAAU,CAAA,IAAM,CACd,IAAMgO,EAAU,UAAW,CAAA,IAAM,CAC3B,IAAA,CAAK,KAAQgC,CAAAA,CAAAA,CAAQ,SAAWH,CAClCE,GAAAA,CAAAA,CAAkBhP,CAAK,CACvBiP,CAAAA,CAAAA,CAAQ,OAAU,CAAA,IAAA,CAAK,KAE3B,EAAA,CAAA,CAAGH,CAAS,EAAA,IAAA,CAAK,KAAQG,CAAAA,CAAAA,CAAQ,OAAQ,CAAA,CAAA,CAEzC,OAAO,IAAM,YAAA,CAAahC,CAAO,CACnC,CAAA,CAAG,CAACjN,CAAO8O,CAAAA,CAAK,CAAC,CAAA,CAEVC,CACT,CCjBO,SAASG,EAAAA,CACdtO,EAAwB,KACkC,CAAA,CAC1D,GAAM,CAACZ,CAAAA,CAAOmB,CAAQ,CAAI5D,CAAAA,cAAAA,CAAkBqD,CAAY,CAAA,CAElDgM,EAAS5O,iBAAY,CAAA,IAAM,CAC/BmD,CAASgO,CAAAA,CAAAA,EAAK,CAACA,CAAC,EAClB,CAAG,CAAA,EAAE,CAEL,CAAA,OAAO,CAACnP,CAAO4M,CAAAA,CAAAA,CAAQzL,CAAQ,CACjC,CCTO,SAASiO,GAAWxO,CAAuB,CAAA,CAAA,CAAqB,CACrE,GAAM,CAACyO,CAAOC,CAAAA,CAAQ,EAAI/R,cAAiBqD,CAAAA,CAAY,EAEjD2O,CAAYvR,CAAAA,iBAAAA,CAAY,IAAMsR,CAAAA,CAASE,GAAKA,CAAI,CAAA,CAAC,CAAG,CAAA,EAAE,CACtDC,CAAAA,CAAAA,CAAYzR,iBAAY,CAAA,IAAMsR,EAASE,CAAKA,EAAAA,CAAAA,CAAI,CAAC,CAAG,CAAA,EAAE,CACtD7N,CAAAA,CAAAA,CAAQ3D,iBAAY,CAAA,IAAMsR,EAAS1O,CAAY,CAAA,CAAG,CAACA,CAAY,CAAC,CAChE8O,CAAAA,CAAAA,CAAM1R,iBAAagC,CAAAA,CAAAA,EAAkBsP,EAAStP,CAAK,CAAA,CAAG,EAAE,CAAA,CAE9D,OAAO,CAAE,KAAA,CAAAqP,CAAO,CAAA,SAAA,CAAAE,EAAW,SAAAE,CAAAA,CAAAA,CAAW,MAAA9N,CAAO,CAAA,GAAA,CAAA+N,CAAI,CACnD,CCVO,SAASC,EAAAA,CAAWC,EAAsBlB,CAA4B,CAAA,CAC3E,IAAMmB,CAAAA,CAAgBlS,cAEtBsB,CAAAA,eAAAA,CAAU,IAAM,CACd4Q,EAAc,OAAUD,CAAAA,EAC1B,CAAG,CAAA,CAACA,CAAQ,CAAC,CAAA,CAEb3Q,gBAAU,IAAM,CACd,GAAIyP,CAAU,GAAA,IAAA,CAAM,CAClB,IAAMoB,EAAK,UAAW,CAAA,IAAMD,CAAc,CAAA,OAAA,KAAanB,CAAK,CAAA,CAC5D,OAAO,IAAM,aAAaoB,CAAE,CAC9B,CACF,CAAG,CAAA,CAACpB,CAAK,CAAC,EACZ,CCbO,SAASqB,EAAYH,CAAAA,CAAAA,CAAsBlB,CAA4B,CAAA,CAC5E,IAAMmB,CAAgBlS,CAAAA,YAAAA,GAEtBsB,eAAU,CAAA,IAAM,CACd4Q,CAAc,CAAA,OAAA,CAAUD,EAC1B,CAAA,CAAG,CAACA,CAAQ,CAAC,EAEb3Q,eAAU,CAAA,IAAM,CACd,GAAIyP,CAAAA,GAAU,IAAM,CAAA,CAClB,IAAMoB,CAAK,CAAA,WAAA,CAAY,IAAMD,CAAc,CAAA,OAAA,KAAanB,CAAK,CAAA,CAC7D,OAAO,IAAM,cAAcoB,CAAE,CAC/B,CACF,CAAA,CAAG,CAACpB,CAAK,CAAC,EACZ,CCXO,SAASsB,EACdjQ,CAAAA,CAAAA,CACAa,EACmD,CAEnD,IAAMqP,CAAYjS,CAAAA,iBAAAA,CAAY,IAAuB,CACnD,GAAI,OAAO,MAAA,CAAW,IACpB,OAAO4C,CAAAA,CAGT,GAAI,CACF,IAAMT,EAAO,MAAO,CAAA,YAAA,CAAa,OAAQJ,CAAAA,CAAG,EAC5C,OAAOI,CAAAA,CAAQ,IAAK,CAAA,KAAA,CAAMA,CAAI,CAAUS,CAAAA,CAC1C,CAAS+C,MAAAA,CAAAA,CAAO,CACd,OAAQ,OAAA,CAAA,IAAA,CAAK,mCAAmC5D,CAAG,CAAA,EAAA,CAAA,CAAM4D,CAAK,CACvD/C,CAAAA,CACT,CACF,CAAA,CAAG,CAACA,CAAcb,CAAAA,CAAG,CAAC,CAEhB,CAAA,CAACmQ,EAAaC,CAAc,CAAA,CAAI5S,cAA0B0S,CAAAA,CAAS,EAGnE9O,CAA+BnD,CAAAA,iBAAAA,CAClCgC,GAAU,CACL,OAAO,OAAW,GACpB,EAAA,OAAA,CAAQ,IAAK,CAAA,CAAA,gCAAA,EAAmCD,CAAG,CAA2C,yCAAA,CAAA,CAAA,CAGhG,GAAI,CACF,IAAMqB,CAAWpB,CAAAA,CAAAA,YAAiB,QAAWA,CAAAA,CAAAA,CAAMkQ,CAAW,CAAIlQ,CAAAA,CAAAA,CAClE,OAAO,YAAa,CAAA,OAAA,CAAQD,EAAK,IAAK,CAAA,SAAA,CAAUqB,CAAQ,CAAC,EACzD+O,CAAe/O,CAAAA,CAAQ,CACvB,CAAA,MAAA,CAAO,cAAc,IAAI,KAAA,CAAM,eAAe,CAAC,EACjD,CAASuC,MAAAA,CAAAA,CAAO,CACd,OAAQ,CAAA,IAAA,CAAK,mCAAmC5D,CAAG,CAAA,EAAA,CAAA,CAAM4D,CAAK,EAChE,CACF,CACA,CAAA,CAAC5D,CAAKmQ,CAAAA,CAAW,CACnB,CAGME,CAAAA,CAAAA,CAAcpS,iBAAY,CAAA,IAAM,CAChC,OAAO,MAAA,CAAW,KACpB,OAAQ,CAAA,IAAA,CAAK,oCAAoC+B,CAAG,CAAA,yCAAA,CAA2C,CAGjG,CAAA,GAAI,CACF,MAAO,CAAA,YAAA,CAAa,WAAWA,CAAG,CAAA,CAClCoQ,EAAe,IAAI,CAAA,CACnB,MAAO,CAAA,aAAA,CAAc,IAAI,KAAM,CAAA,eAAe,CAAC,EACjD,CAAA,MAASxM,EAAO,CACd,OAAA,CAAQ,IAAK,CAAA,CAAA,iCAAA,EAAoC5D,CAAG,CAAM4D,EAAAA,CAAAA,CAAAA,CAAK,EACjE,CACF,EAAG,CAAC5D,CAAG,CAAC,CAAA,CAER,OAAAd,eAAU,CAAA,IAAM,CACdkR,CAAeF,CAAAA,CAAAA,EAAW,EAC5B,CAAA,CAAG,CAACA,CAAS,CAAC,CAGdhR,CAAAA,eAAAA,CAAU,IAAM,CACd,IAAMoR,CAAuBjR,CAAAA,CAAAA,EAAoB,CAC3CA,CAAAA,CAAE,MAAQW,CAAOX,EAAAA,CAAAA,CAAE,WAAa,IAClC+Q,EAAAA,CAAAA,CAAe,KAAK,KAAM/Q,CAAAA,CAAAA,CAAE,QAAQ,CAAM,EAE9C,CAEMkR,CAAAA,CAAAA,CAA2B,IAAM,CACrCH,EAAeF,CAAU,EAAC,EAC5B,CAAA,CAEA,cAAO,gBAAiB,CAAA,SAAA,CAAWI,CAAmB,CACtD,CAAA,MAAA,CAAO,iBAAiB,eAAiBC,CAAAA,CAAwB,CAE1D,CAAA,IAAM,CACX,MAAO,CAAA,mBAAA,CAAoB,UAAWD,CAAmB,CAAA,CACzD,OAAO,mBAAoB,CAAA,eAAA,CAAiBC,CAAwB,EACtE,CACF,CAAG,CAAA,CAACvQ,EAAKkQ,CAAS,CAAC,EAEZ,CAACC,CAAAA,CAAa/O,CAAUiP,CAAAA,CAAW,CAC5C,CCnFO,SAASG,EAAAA,CAAevQ,EAAyB,CACtD,IAAMS,EAAM9C,YAAU,EAAA,CAEtB,OAAAsB,eAAU,CAAA,IAAM,CACdwB,CAAAA,CAAI,QAAUT,EAChB,CAAA,CAAG,CAACA,CAAK,CAAC,CAEHS,CAAAA,CAAAA,CAAI,OACb,CCRO,SAAS+P,EAAYC,CAAAA,CAAAA,CAA4B,CACtD,GAAM,CAACC,CAAYC,CAAAA,CAAa,EAAIpT,cAAkB,CAAA,KAAK,CAErDqT,CAAAA,CAAAA,CAAc5S,kBAClB,CAAC,CAAE,IAAA+B,CAAI,CAAA,GAAqB,CACtBA,CAAQ0Q,GAAAA,CAAAA,EACVE,CAAc,CAAA,IAAI,EAEtB,CACA,CAAA,CAACF,CAAS,CACZ,CAAA,CAEMI,EAAY7S,iBAChB,CAAA,CAAC,CAAE,GAAA,CAAA+B,CAAI,CAAqB,GAAA,CACtBA,IAAQ0Q,CACVE,EAAAA,CAAAA,CAAc,KAAK,EAEvB,CAAA,CACA,CAACF,CAAS,CACZ,CAEA,CAAA,OAAAxR,eAAU,CAAA,KACR,OAAO,gBAAiB,CAAA,SAAA,CAAW2R,CAAW,CAAA,CAC9C,OAAO,gBAAiB,CAAA,OAAA,CAASC,CAAS,CAEnC,CAAA,IAAM,CACX,MAAO,CAAA,mBAAA,CAAoB,SAAWD,CAAAA,CAAW,EACjD,MAAO,CAAA,mBAAA,CAAoB,OAASC,CAAAA,CAAS,EAC/C,CACC,CAAA,CAAA,CAACD,CAAaC,CAAAA,CAAS,CAAC,CAEpBH,CAAAA,CACT,CCjCO,SAASI,EAAAA,EAA4B,CAC1C,IAAMC,EAAUpT,YAAO,CAAA,IAAI,CAE3B,CAAA,OAAIoT,EAAQ,OACVA,EAAAA,CAAAA,CAAQ,QAAU,KACX,CAAA,IAAA,EAGFA,EAAQ,OACjB,CCPO,SAASC,EAAAA,CAAgBC,EAAmCzQ,CAA6B,CAAA,CAC9F,IAAMuQ,CAAUD,CAAAA,EAAAA,GAEhB7R,eAAU,CAAA,IAAM,CACd,GAAI,CAAC8R,CACH,CAAA,OAAOE,GAEX,CAAA,CAAGzQ,CAAI,EACT","file":"index.js","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\ninterface VirtualListOptions<T> {\n  itemHeight: number | ((index: number, item: T) => number);\n  overscan?: number;\n  estimatedItemHeight?: number;\n  getItemKey?: (index: number, item: T) => string | number;\n  onScroll?: (scrollTop: number) => void;\n  scrollThreshold?: number;\n  onEndReached?: () => void;\n}\n\ninterface VirtualListReturn<T> {\n  virtualItems: VirtualItem<T>[];\n  totalHeight: number;\n  scrollToIndex: (index: number, options?: ScrollToOptions) => void;\n  containerProps: {\n    onScroll: (e: React.UIEvent<HTMLElement>) => void;\n    style: React.CSSProperties;\n  };\n  wrapperProps: {\n    style: React.CSSProperties;\n  };\n  isScrolling: boolean;\n}\n\ninterface VirtualItem<T> {\n  index: number;\n  item: T;\n  key: string | number;\n  style: React.CSSProperties;\n  isVisible: boolean;\n}\n\ninterface ScrollToOptions {\n  behavior?: 'auto' | 'smooth';\n  align?: 'start' | 'center' | 'end';\n}\n\nexport function useVirtualList<T>(\n  items: T[],\n  containerHeight: number,\n  options: VirtualListOptions<T>\n): VirtualListReturn<T> {\n  const {\n    itemHeight,\n    overscan = 3,\n    estimatedItemHeight = 50,\n    getItemKey,\n    onScroll,\n    scrollThreshold = 0.9,\n    onEndReached,\n  } = options;\n\n  const [scrollTop, setScrollTop] = useState(0);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const scrollTimeoutRef = useRef<NodeJS.Timeout>();\n  const containerRef = useRef<HTMLElement>();\n  const heightCacheRef = useRef(new Map<number, number>());\n  const lastEndReachedRef = useRef(false);\n\n  const getItemHeight = useCallback(\n    (index: number): number => {\n      if (typeof itemHeight === 'function') {\n        const cached = heightCacheRef.current.get(index);\n        if (cached !== undefined) return cached;\n        \n        const height = itemHeight(index, items[index]);\n        heightCacheRef.current.set(index, height);\n        return height;\n      }\n      return itemHeight;\n    },\n    [itemHeight, items]\n  );\n\n  const { startIndex, endIndex, virtualItems, totalHeight } = useMemo(() => {\n    let accumulatedHeight = 0;\n    let startIdx = 0;\n    let endIdx = items.length - 1;\n\n    for (let i = 0; i < items.length; i++) {\n      const height = getItemHeight(i);\n      \n      if (accumulatedHeight + height < scrollTop - overscan * estimatedItemHeight) {\n        startIdx = i + 1;\n        accumulatedHeight += height;\n      } else {\n        break;\n      }\n    }\n\n    accumulatedHeight = 0;\n    for (let i = startIdx; i < items.length; i++) {\n      if (accumulatedHeight > containerHeight + overscan * estimatedItemHeight) {\n        endIdx = i - 1;\n        break;\n      }\n      accumulatedHeight += getItemHeight(i);\n    }\n\n    let totalH = 0;\n    for (let i = 0; i < items.length; i++) {\n      totalH += getItemHeight(i);\n    }\n\n    const vItems: VirtualItem<T>[] = [];\n    let itemTop = 0;\n\n    for (let i = 0; i < startIdx; i++) {\n      itemTop += getItemHeight(i);\n    }\n\n    for (let i = startIdx; i <= endIdx && i < items.length; i++) {\n      const height = getItemHeight(i);\n      const isVisible = itemTop + height > scrollTop && itemTop < scrollTop + containerHeight;\n      \n      vItems.push({\n        index: i,\n        item: items[i],\n        key: getItemKey ? getItemKey(i, items[i]) : i,\n        style: {\n          position: 'absolute',\n          top: `${itemTop}px`,\n          left: 0,\n          width: '100%',\n          height: `${height}px`,\n        },\n        isVisible,\n      });\n      \n      itemTop += height;\n    }\n\n    return {\n      startIndex: startIdx,\n      endIndex: endIdx,\n      virtualItems: vItems,\n      totalHeight: totalH,\n    };\n  }, [scrollTop, containerHeight, items, getItemHeight, overscan, estimatedItemHeight, getItemKey]);\n\n  useEffect(() => {\n    const scrollProgress = scrollTop / (totalHeight - containerHeight);\n    \n    if (scrollProgress >= scrollThreshold && !lastEndReachedRef.current && onEndReached) {\n      lastEndReachedRef.current = true;\n      onEndReached();\n    } else if (scrollProgress < scrollThreshold) {\n      lastEndReachedRef.current = false;\n    }\n  }, [scrollTop, totalHeight, containerHeight, scrollThreshold, onEndReached]);\n\n  const handleScroll = useCallback(\n    (e: React.UIEvent<HTMLElement>) => {\n      const target = e.currentTarget;\n      containerRef.current = target;\n      \n      const newScrollTop = target.scrollTop;\n      setScrollTop(newScrollTop);\n      setIsScrolling(true);\n      \n      if (onScroll) {\n        onScroll(newScrollTop);\n      }\n\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n      \n      scrollTimeoutRef.current = setTimeout(() => {\n        setIsScrolling(false);\n      }, 150);\n    },\n    [onScroll]\n  );\n\n  const scrollToIndex = useCallback(\n    (index: number, options: ScrollToOptions = {}) => {\n      const { behavior = 'auto', align = 'start' } = options;\n      \n      if (!containerRef.current || index < 0 || index >= items.length) return;\n\n      let targetTop = 0;\n      for (let i = 0; i < index; i++) {\n        targetTop += getItemHeight(i);\n      }\n\n      const itemH = getItemHeight(index);\n      \n      switch (align) {\n        case 'center':\n          targetTop = targetTop - containerHeight / 2 + itemH / 2;\n          break;\n        case 'end':\n          targetTop = targetTop - containerHeight + itemH;\n          break;\n      }\n\n      targetTop = Math.max(0, Math.min(targetTop, totalHeight - containerHeight));\n      \n      containerRef.current.scrollTo({\n        top: targetTop,\n        behavior,\n      });\n    },\n    [items.length, getItemHeight, containerHeight, totalHeight]\n  );\n\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    virtualItems,\n    totalHeight,\n    scrollToIndex,\n    containerProps: {\n      onScroll: handleScroll,\n      style: {\n        overflow: 'auto',\n        position: 'relative' as const,\n        height: `${containerHeight}px`,\n      },\n    },\n    wrapperProps: {\n      style: {\n        position: 'relative' as const,\n        height: `${totalHeight}px`,\n        width: '100%',\n      },\n    },\n    isScrolling,\n  };\n}","import { useRef, useMemo } from 'react';\n\ntype DependencyList = ReadonlyArray<unknown>;\n\nfunction deepEqual(a: unknown, b: unknown): boolean {\n  if (a === b) return true;\n  \n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  \n  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) {\n    return a === b;\n  }\n  \n  if (a === null || a === undefined || b === null || b === undefined) {\n    return false;\n  }\n  \n  if (a.constructor !== b.constructor) return false;\n  \n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    \n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) return false;\n    }\n    \n    return true;\n  }\n  \n  if (a instanceof Map && b instanceof Map) {\n    if (a.size !== b.size) return false;\n    \n    for (const [key, value] of a) {\n      if (!b.has(key) || !deepEqual(value, b.get(key))) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n  \n  if (a instanceof Set && b instanceof Set) {\n    if (a.size !== b.size) return false;\n    \n    const aArray = Array.from(a);\n    const bArray = Array.from(b);\n    \n    return aArray.every(item => bArray.some(bItem => deepEqual(item, bItem)));\n  }\n  \n  const keys = Object.keys(a as object);\n  \n  if (keys.length !== Object.keys(b as object).length) {\n    return false;\n  }\n  \n  for (const key of keys) {\n    if (!deepEqual((a as any)[key], (b as any)[key])) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nexport function useDeepMemo<T>(\n  factory: () => T,\n  deps: DependencyList\n): T {\n  const ref = useRef<{ deps: DependencyList; value: T }>();\n  \n  const value = useMemo(() => {\n    if (!ref.current || !deepEqual(deps, ref.current.deps)) {\n      ref.current = {\n        deps,\n        value: factory(),\n      };\n    }\n    \n    return ref.current.value;\n  }, [factory, ...deps]);\n  \n  return value;\n}\n\nexport function useDeepCompareMemoize<T>(value: T): T {\n  const ref = useRef<T>(value);\n  \n  if (!deepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n  \n  return ref.current;\n}","import { useCallback, useRef, useState } from 'react';\n\ninterface StateWithHistoryOptions {\n  maxHistorySize?: number;\n  includePresent?: boolean;\n}\n\ninterface StateWithHistoryReturn<T> {\n  value: T;\n  setValue: (newValue: T | ((prev: T) => T)) => void;\n  history: T[];\n  historyIndex: number;\n  canUndo: boolean;\n  canRedo: boolean;\n  undo: () => void;\n  redo: () => void;\n  goTo: (index: number) => void;\n  clear: () => void;\n  reset: (newValue?: T) => void;\n}\n\nexport function useStateWithHistory<T>(\n  initialValue: T,\n  options: StateWithHistoryOptions = {}\n): StateWithHistoryReturn<T> {\n  const { maxHistorySize = 50, includePresent = true } = options;\n  \n  const [value, setValueInternal] = useState<T>(initialValue);\n  const historyRef = useRef<T[]>([initialValue]);\n  const historyIndexRef = useRef(0);\n  const [, forceUpdate] = useState({});\n\n  const setValue = useCallback((newValue: T | ((prev: T) => T)) => {\n    const resolvedValue = typeof newValue === 'function' \n      ? (newValue as (prev: T) => T)(value) \n      : newValue;\n    \n    if (Object.is(resolvedValue, value)) return;\n    \n    const newHistory = historyRef.current.slice(0, historyIndexRef.current + 1);\n    newHistory.push(resolvedValue);\n    \n    if (newHistory.length > maxHistorySize) {\n      newHistory.shift();\n    } else {\n      historyIndexRef.current++;\n    }\n    \n    historyRef.current = newHistory;\n    setValueInternal(resolvedValue);\n    forceUpdate({});\n  }, [value, maxHistorySize]);\n\n  const undo = useCallback(() => {\n    if (historyIndexRef.current > 0) {\n      historyIndexRef.current--;\n      const newValue = historyRef.current[historyIndexRef.current];\n      setValueInternal(newValue);\n      forceUpdate({});\n    }\n  }, []);\n\n  const redo = useCallback(() => {\n    if (historyIndexRef.current < historyRef.current.length - 1) {\n      historyIndexRef.current++;\n      const newValue = historyRef.current[historyIndexRef.current];\n      setValueInternal(newValue);\n      forceUpdate({});\n    }\n  }, []);\n\n  const goTo = useCallback((index: number) => {\n    if (index >= 0 && index < historyRef.current.length) {\n      historyIndexRef.current = index;\n      const newValue = historyRef.current[index];\n      setValueInternal(newValue);\n      forceUpdate({});\n    }\n  }, []);\n\n  const clear = useCallback(() => {\n    historyRef.current = [value];\n    historyIndexRef.current = 0;\n    forceUpdate({});\n  }, [value]);\n\n  const reset = useCallback((newValue?: T) => {\n    const resetValue = newValue !== undefined ? newValue : initialValue;\n    historyRef.current = [resetValue];\n    historyIndexRef.current = 0;\n    setValueInternal(resetValue);\n    forceUpdate({});\n  }, [initialValue]);\n\n  const history = includePresent \n    ? historyRef.current \n    : historyRef.current.slice(0, -1);\n\n  return {\n    value,\n    setValue,\n    history,\n    historyIndex: historyIndexRef.current,\n    canUndo: historyIndexRef.current > 0,\n    canRedo: historyIndexRef.current < historyRef.current.length - 1,\n    undo,\n    redo,\n    goTo,\n    clear,\n    reset,\n  };\n}","import { useCallback, useReducer } from 'react';\n\ninterface UndoState<T> {\n  past: T[];\n  present: T;\n  future: T[];\n}\n\ntype UndoAction<T> =\n  | { type: 'SET'; payload: T }\n  | { type: 'UNDO' }\n  | { type: 'REDO' }\n  | { type: 'RESET'; payload: T }\n  | { type: 'CLEAR' };\n\nfunction undoReducer<T>(state: UndoState<T>, action: UndoAction<T>): UndoState<T> {\n  switch (action.type) {\n    case 'SET': {\n      if (Object.is(action.payload, state.present)) {\n        return state;\n      }\n      return {\n        past: [...state.past, state.present],\n        present: action.payload,\n        future: [],\n      };\n    }\n    \n    case 'UNDO': {\n      if (state.past.length === 0) return state;\n      \n      const previous = state.past[state.past.length - 1];\n      const newPast = state.past.slice(0, -1);\n      \n      return {\n        past: newPast,\n        present: previous,\n        future: [state.present, ...state.future],\n      };\n    }\n    \n    case 'REDO': {\n      if (state.future.length === 0) return state;\n      \n      const next = state.future[0];\n      const newFuture = state.future.slice(1);\n      \n      return {\n        past: [...state.past, state.present],\n        present: next,\n        future: newFuture,\n      };\n    }\n    \n    case 'RESET': {\n      return {\n        past: [],\n        present: action.payload,\n        future: [],\n      };\n    }\n    \n    case 'CLEAR': {\n      return {\n        past: [],\n        present: state.present,\n        future: [],\n      };\n    }\n    \n    default:\n      return state;\n  }\n}\n\ninterface UseUndoOptions {\n  maxHistory?: number;\n}\n\ninterface UseUndoReturn<T> {\n  value: T;\n  setValue: (value: T) => void;\n  undo: () => void;\n  redo: () => void;\n  clear: () => void;\n  reset: (value: T) => void;\n  canUndo: boolean;\n  canRedo: boolean;\n  history: {\n    past: T[];\n    future: T[];\n  };\n}\n\nexport function useUndo<T>(\n  initialValue: T,\n  options: UseUndoOptions = {}\n): UseUndoReturn<T> {\n  const { maxHistory = 100 } = options;\n  \n  const [state, dispatch] = useReducer(undoReducer<T>, {\n    past: [],\n    present: initialValue,\n    future: [],\n  });\n\n  const setValue = useCallback((value: T) => {\n    dispatch({ type: 'SET', payload: value });\n  }, []);\n\n  const undo = useCallback(() => {\n    dispatch({ type: 'UNDO' });\n  }, []);\n\n  const redo = useCallback(() => {\n    dispatch({ type: 'REDO' });\n  }, []);\n\n  const clear = useCallback(() => {\n    dispatch({ type: 'CLEAR' });\n  }, []);\n\n  const reset = useCallback((value: T) => {\n    dispatch({ type: 'RESET', payload: value });\n  }, []);\n\n  const trimmedState = {\n    ...state,\n    past: state.past.slice(-maxHistory),\n  };\n\n  return {\n    value: trimmedState.present,\n    setValue,\n    undo,\n    redo,\n    clear,\n    reset,\n    canUndo: trimmedState.past.length > 0,\n    canRedo: trimmedState.future.length > 0,\n    history: {\n      past: trimmedState.past,\n      future: trimmedState.future,\n    },\n  };\n}","import { useCallback, useReducer, useRef } from 'react';\n\ntype Reducer<S, A> = (state: S, action: A) => S;\ntype Dispatch<A> = (action: A) => void;\n\ninterface Store<S, A> {\n  getState: () => S;\n  dispatch: Dispatch<A>;\n}\n\ntype Middleware<S, A> = (store: Store<S, A>) => (next: Dispatch<A>) => Dispatch<A>;\n\nexport function useReducerWithMiddleware<S, A>(\n  reducer: Reducer<S, A>,\n  initialState: S,\n  middlewares: Middleware<S, A>[] = []\n): [S, Dispatch<A>] {\n  const [state, baseDispatch] = useReducer(reducer, initialState);\n  const stateRef = useRef(state);\n  stateRef.current = state;\n\n  const store: Store<S, A> = {\n    getState: () => stateRef.current,\n    dispatch: () => {\n      throw new Error('Dispatch not initialized');\n    },\n  };\n\n  const dispatch = useCallback((action: A) => {\n    let dispatchChain = baseDispatch;\n\n    for (let i = middlewares.length - 1; i >= 0; i--) {\n      const middleware = middlewares[i];\n      const next = dispatchChain;\n      dispatchChain = middleware(store)(next);\n    }\n\n    dispatchChain(action);\n  }, [middlewares, baseDispatch, store]);\n\n  store.dispatch = dispatch;\n\n  return [state, dispatch];\n}\n\nexport const loggerMiddleware: Middleware<any, any> = (store) => (next) => (action) => {\n  console.group(`Action: ${action.type || 'Unknown'}`);\n  console.log('Previous State:', store.getState());\n  console.log('Action:', action);\n  \n  const result = next(action);\n  \n  console.log('Next State:', store.getState());\n  console.groupEnd();\n  \n  return result;\n};\n\nexport const thunkMiddleware: Middleware<any, any> = (store) => (next) => (action) => {\n  if (typeof action === 'function') {\n    return action(store.dispatch, store.getState);\n  }\n  \n  return next(action);\n};\n\nexport const devtoolsMiddleware: Middleware<any, any> = (store) => (next) => {\n  const devtools = (window as any).__REDUX_DEVTOOLS_EXTENSION__;\n  \n  if (!devtools) {\n    return next;\n  }\n\n  const devtoolsInstance = devtools.connect();\n  \n  return (action) => {\n    const result = next(action);\n    devtoolsInstance.send(action, store.getState());\n    return result;\n  };\n};\n\ninterface AsyncAction<S, A> {\n  type: string;\n  payload?: any;\n  meta?: {\n    isAsync?: boolean;\n    isPending?: boolean;\n    isSuccess?: boolean;\n    isError?: boolean;\n    error?: any;\n  };\n}\n\nexport function createAsyncMiddleware<S, A extends AsyncAction<S, A>>(): Middleware<S, A> {\n  return (store) => (next) => async (action) => {\n    if (!action.meta?.isAsync) {\n      return next(action);\n    }\n\n    const { type, payload } = action;\n\n    next({ \n      type: `${type}_PENDING`, \n      meta: { isPending: true } \n    } as A);\n\n    try {\n      const result = typeof payload === 'function' ? await payload() : await payload;\n      \n      next({ \n        type: `${type}_SUCCESS`, \n        payload: result,\n        meta: { isSuccess: true } \n      } as A);\n      \n      return result;\n    } catch (error) {\n      next({ \n        type: `${type}_ERROR`, \n        payload: error,\n        meta: { isError: true, error } \n      } as A);\n      \n      throw error;\n    }\n  };\n}","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface WebSocketOptions {\n  reconnect?: boolean;\n  reconnectAttempts?: number;\n  reconnectInterval?: number;\n  manual?: boolean;\n  onOpen?: (event: Event) => void;\n  onClose?: (event: CloseEvent) => void;\n  onMessage?: (event: MessageEvent) => void;\n  onError?: (event: Event) => void;\n  onReconnectStop?: () => void;\n  shouldReconnect?: (event: CloseEvent) => boolean;\n  protocols?: string | string[];\n  retryOnError?: boolean;\n  filter?: (message: MessageEvent) => boolean;\n  heartbeat?: {\n    message?: string | (() => string);\n    interval?: number;\n    pongTimeout?: number;\n    responseMessage?: string;\n  };\n}\n\ntype ReadyState = 0 | 1 | 2 | 3;\n\ninterface WebSocketReturn<T> {\n  sendMessage: (message: string | ArrayBufferLike | Blob | ArrayBufferView) => void;\n  sendJsonMessage: (message: T) => void;\n  lastMessage: MessageEvent | null;\n  lastJsonMessage: T | null;\n  readyState: ReadyState;\n  connect: () => void;\n  disconnect: (code?: number, reason?: string) => void;\n  messageHistory: MessageEvent[];\n  reconnectCount: number;\n}\n\nexport function useWebSocket<T = any>(\n  url: string | (() => string),\n  options: WebSocketOptions = {}\n): WebSocketReturn<T> {\n  const {\n    reconnect = true,\n    reconnectAttempts = 5,\n    reconnectInterval = 1000,\n    manual = false,\n    onOpen,\n    onClose,\n    onMessage,\n    onError,\n    onReconnectStop,\n    shouldReconnect,\n    protocols,\n    retryOnError = false,\n    filter,\n    heartbeat,\n  } = options;\n\n  const [readyState, setReadyState] = useState<ReadyState>(3);\n  const [lastMessage, setLastMessage] = useState<MessageEvent | null>(null);\n  const [lastJsonMessage, setLastJsonMessage] = useState<T | null>(null);\n  const [messageHistory, setMessageHistory] = useState<MessageEvent[]>([]);\n  const [reconnectCount, setReconnectCount] = useState(0);\n\n  const ws = useRef<WebSocket | null>(null);\n  const reconnectTimer = useRef<NodeJS.Timeout>();\n  const heartbeatTimer = useRef<NodeJS.Timeout>();\n  const pongTimer = useRef<NodeJS.Timeout>();\n  const reconnectCountRef = useRef(0);\n  const unmountedRef = useRef(false);\n\n  const getUrl = useCallback(() => {\n    return typeof url === 'function' ? url() : url;\n  }, [url]);\n\n  const startHeartbeat = useCallback(() => {\n    if (!heartbeat || !ws.current || ws.current.readyState !== WebSocket.OPEN) {\n      return;\n    }\n\n    const { message = 'ping', interval = 30000, pongTimeout = 10000 } = heartbeat;\n\n    const sendPing = () => {\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n        const pingMessage = typeof message === 'function' ? message() : message;\n        ws.current.send(pingMessage);\n\n        if (pongTimer.current) {\n          clearTimeout(pongTimer.current);\n        }\n\n        pongTimer.current = setTimeout(() => {\n          if (ws.current) {\n            ws.current.close();\n          }\n        }, pongTimeout);\n      }\n    };\n\n    sendPing();\n    heartbeatTimer.current = setInterval(sendPing, interval);\n  }, [heartbeat]);\n\n  const stopHeartbeat = useCallback(() => {\n    if (heartbeatTimer.current) {\n      clearInterval(heartbeatTimer.current);\n    }\n    if (pongTimer.current) {\n      clearTimeout(pongTimer.current);\n    }\n  }, []);\n\n  const connect = useCallback(() => {\n    if (unmountedRef.current) return;\n\n    try {\n      const wsUrl = getUrl();\n      ws.current = protocols ? new WebSocket(wsUrl, protocols) : new WebSocket(wsUrl);\n\n      ws.current.onopen = (event) => {\n        if (unmountedRef.current) return;\n        \n        setReadyState(ws.current!.readyState);\n        reconnectCountRef.current = 0;\n        setReconnectCount(0);\n        \n        if (onOpen) {\n          onOpen(event);\n        }\n\n        startHeartbeat();\n      };\n\n      ws.current.onclose = (event) => {\n        if (unmountedRef.current) return;\n        \n        setReadyState(ws.current!.readyState);\n        stopHeartbeat();\n        \n        if (onClose) {\n          onClose(event);\n        }\n\n        if (reconnect && reconnectCountRef.current < reconnectAttempts) {\n          const shouldReconnectNow = shouldReconnect ? shouldReconnect(event) : true;\n          \n          if (shouldReconnectNow) {\n            reconnectTimer.current = setTimeout(() => {\n              reconnectCountRef.current++;\n              setReconnectCount(reconnectCountRef.current);\n              connect();\n            }, reconnectInterval * Math.pow(2, reconnectCountRef.current));\n          }\n        } else if (reconnectCountRef.current >= reconnectAttempts && onReconnectStop) {\n          onReconnectStop();\n        }\n      };\n\n      ws.current.onerror = (event) => {\n        if (unmountedRef.current) return;\n        \n        if (onError) {\n          onError(event);\n        }\n\n        if (retryOnError && reconnectCountRef.current < reconnectAttempts) {\n          reconnectTimer.current = setTimeout(() => {\n            reconnectCountRef.current++;\n            setReconnectCount(reconnectCountRef.current);\n            connect();\n          }, reconnectInterval);\n        }\n      };\n\n      ws.current.onmessage = (event) => {\n        if (unmountedRef.current) return;\n\n        if (heartbeat?.responseMessage && event.data === heartbeat.responseMessage) {\n          if (pongTimer.current) {\n            clearTimeout(pongTimer.current);\n          }\n          return;\n        }\n\n        if (filter && !filter(event)) {\n          return;\n        }\n\n        setLastMessage(event);\n        setMessageHistory((prev) => [...prev, event]);\n\n        try {\n          const jsonData = JSON.parse(event.data);\n          setLastJsonMessage(jsonData);\n        } catch {\n          // Not JSON data\n        }\n\n        if (onMessage) {\n          onMessage(event);\n        }\n      };\n\n      setReadyState(ws.current.readyState);\n    } catch (error) {\n      if (onError) {\n        onError(new Event('WebSocket connection error'));\n      }\n    }\n  }, [\n    getUrl,\n    protocols,\n    reconnect,\n    reconnectAttempts,\n    reconnectInterval,\n    onOpen,\n    onClose,\n    onError,\n    onMessage,\n    onReconnectStop,\n    shouldReconnect,\n    retryOnError,\n    filter,\n    startHeartbeat,\n    stopHeartbeat,\n    heartbeat,\n  ]);\n\n  const disconnect = useCallback((code = 1000, reason = 'Client disconnect') => {\n    if (reconnectTimer.current) {\n      clearTimeout(reconnectTimer.current);\n    }\n\n    stopHeartbeat();\n\n    if (ws.current && ws.current.readyState !== WebSocket.CLOSED) {\n      ws.current.close(code, reason);\n    }\n  }, [stopHeartbeat]);\n\n  const sendMessage = useCallback((message: string | ArrayBufferLike | Blob | ArrayBufferView) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    } else {\n      console.warn('WebSocket is not open. Unable to send message.');\n    }\n  }, []);\n\n  const sendJsonMessage = useCallback((message: T) => {\n    sendMessage(JSON.stringify(message));\n  }, [sendMessage]);\n\n  useEffect(() => {\n    unmountedRef.current = false;\n\n    if (!manual) {\n      connect();\n    }\n\n    return () => {\n      unmountedRef.current = true;\n      disconnect();\n    };\n  }, [url]);\n\n  useEffect(() => {\n    if (ws.current) {\n      setReadyState(ws.current.readyState);\n    }\n  });\n\n  return {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage,\n    lastJsonMessage,\n    readyState,\n    connect,\n    disconnect,\n    messageHistory,\n    reconnectCount,\n  };\n}","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface SSEOptions {\n  withCredentials?: boolean;\n  events?: string[];\n  reconnect?: boolean;\n  reconnectInterval?: number;\n  reconnectAttempts?: number;\n  onOpen?: () => void;\n  onError?: (error: Event) => void;\n  onMessage?: (event: MessageEvent) => void;\n  manual?: boolean;\n  eventSourceOptions?: EventSourceInit;\n}\n\ninterface SSEReturn<T> {\n  data: T | null;\n  error: Event | null;\n  readyState: number;\n  connect: () => void;\n  disconnect: () => void;\n  eventHistory: Array<{ event: string; data: T; timestamp: number }>;\n}\n\nexport function useSSE<T = any>(\n  url: string | (() => string),\n  options: SSEOptions = {}\n): SSEReturn<T> {\n  const {\n    withCredentials = false,\n    events = [],\n    reconnect = true,\n    reconnectInterval = 3000,\n    reconnectAttempts = 5,\n    onOpen,\n    onError,\n    onMessage,\n    manual = false,\n    eventSourceOptions,\n  } = options;\n\n  const [data, setData] = useState<T | null>(null);\n  const [error, setError] = useState<Event | null>(null);\n  const [readyState, setReadyState] = useState<number>(EventSource.CLOSED);\n  const [eventHistory, setEventHistory] = useState<Array<{ event: string; data: T; timestamp: number }>>([]);\n\n  const eventSource = useRef<EventSource | null>(null);\n  const reconnectTimer = useRef<NodeJS.Timeout>();\n  const reconnectCount = useRef(0);\n  const unmountedRef = useRef(false);\n\n  const getUrl = useCallback(() => {\n    return typeof url === 'function' ? url() : url;\n  }, [url]);\n\n  const connect = useCallback(() => {\n    if (unmountedRef.current || eventSource.current) return;\n\n    try {\n      const sseUrl = getUrl();\n      const options: EventSourceInit = {\n        withCredentials,\n        ...eventSourceOptions,\n      };\n\n      eventSource.current = new EventSource(sseUrl, options);\n      setReadyState(eventSource.current.readyState);\n\n      eventSource.current.onopen = () => {\n        if (unmountedRef.current) return;\n        \n        setReadyState(EventSource.OPEN);\n        setError(null);\n        reconnectCount.current = 0;\n        \n        if (onOpen) {\n          onOpen();\n        }\n      };\n\n      eventSource.current.onerror = (event) => {\n        if (unmountedRef.current) return;\n        \n        setError(event);\n        setReadyState(eventSource.current!.readyState);\n        \n        if (onError) {\n          onError(event);\n        }\n\n        if (eventSource.current?.readyState === EventSource.CLOSED) {\n          eventSource.current = null;\n          \n          if (reconnect && reconnectCount.current < reconnectAttempts) {\n            reconnectTimer.current = setTimeout(() => {\n              reconnectCount.current++;\n              connect();\n            }, reconnectInterval * Math.pow(1.5, reconnectCount.current));\n          }\n        }\n      };\n\n      eventSource.current.onmessage = (event) => {\n        if (unmountedRef.current) return;\n        \n        try {\n          const parsedData = JSON.parse(event.data) as T;\n          setData(parsedData);\n          setEventHistory((prev) => [...prev, {\n            event: 'message',\n            data: parsedData,\n            timestamp: Date.now(),\n          }]);\n        } catch {\n          setData(event.data as T);\n          setEventHistory((prev) => [...prev, {\n            event: 'message',\n            data: event.data as T,\n            timestamp: Date.now(),\n          }]);\n        }\n        \n        if (onMessage) {\n          onMessage(event);\n        }\n      };\n\n      events.forEach((eventName) => {\n        if (eventSource.current) {\n          eventSource.current.addEventListener(eventName, (event: MessageEvent) => {\n            if (unmountedRef.current) return;\n            \n            try {\n              const parsedData = JSON.parse(event.data) as T;\n              setData(parsedData);\n              setEventHistory((prev) => [...prev, {\n                event: eventName,\n                data: parsedData,\n                timestamp: Date.now(),\n              }]);\n            } catch {\n              setData(event.data as T);\n              setEventHistory((prev) => [...prev, {\n                event: eventName,\n                data: event.data as T,\n                timestamp: Date.now(),\n              }]);\n            }\n          });\n        }\n      });\n    } catch (err) {\n      setError(new Event('Failed to create EventSource'));\n      if (onError) {\n        onError(new Event('Failed to create EventSource'));\n      }\n    }\n  }, [\n    getUrl,\n    withCredentials,\n    eventSourceOptions,\n    events,\n    reconnect,\n    reconnectAttempts,\n    reconnectInterval,\n    onOpen,\n    onError,\n    onMessage,\n  ]);\n\n  const disconnect = useCallback(() => {\n    if (reconnectTimer.current) {\n      clearTimeout(reconnectTimer.current);\n    }\n\n    if (eventSource.current) {\n      eventSource.current.close();\n      eventSource.current = null;\n      setReadyState(EventSource.CLOSED);\n    }\n  }, []);\n\n  useEffect(() => {\n    unmountedRef.current = false;\n\n    if (!manual) {\n      connect();\n    }\n\n    return () => {\n      unmountedRef.current = true;\n      disconnect();\n    };\n  }, [url]);\n\n  return {\n    data,\n    error,\n    readyState,\n    connect,\n    disconnect,\n    eventHistory,\n  };\n}","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface PollingOptions<T> {\n  interval?: number;\n  onSuccess?: (data: T) => void;\n  onError?: (error: Error) => void;\n  retryOnError?: boolean;\n  maxRetries?: number;\n  retryDelay?: number;\n  enabled?: boolean;\n  immediate?: boolean;\n  stopOnError?: boolean;\n  stopCondition?: (data: T) => boolean;\n  cache?: boolean;\n  cacheTime?: number;\n  headers?: HeadersInit;\n  method?: string;\n  body?: any;\n  signal?: AbortSignal;\n}\n\ninterface PollingReturn<T> {\n  data: T | null;\n  error: Error | null;\n  loading: boolean;\n  start: () => void;\n  stop: () => void;\n  isPolling: boolean;\n  lastUpdate: Date | null;\n  pollCount: number;\n  retry: () => void;\n}\n\nexport function usePolling<T = any>(\n  url: string | (() => string | Promise<string>),\n  options: PollingOptions<T> = {}\n): PollingReturn<T> {\n  const {\n    interval = 5000,\n    onSuccess,\n    onError,\n    retryOnError = true,\n    maxRetries = 3,\n    retryDelay = 1000,\n    enabled = true,\n    immediate = true,\n    stopOnError = false,\n    stopCondition,\n    cache = false,\n    cacheTime = 60000,\n    headers,\n    method = 'GET',\n    body,\n    signal,\n  } = options;\n\n  const [data, setData] = useState<T | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [isPolling, setIsPolling] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const [pollCount, setPollCount] = useState(0);\n\n  const pollingTimer = useRef<NodeJS.Timeout>();\n  const retryCount = useRef(0);\n  const cacheRef = useRef<{ data: T; timestamp: number } | null>(null);\n  const abortController = useRef<AbortController>();\n  const unmountedRef = useRef(false);\n\n  const getUrl = useCallback(async () => {\n    const urlValue = typeof url === 'function' ? await url() : url;\n    return urlValue;\n  }, [url]);\n\n  const fetchData = useCallback(async () => {\n    if (unmountedRef.current) return;\n\n    if (cache && cacheRef.current) {\n      const now = Date.now();\n      if (now - cacheRef.current.timestamp < cacheTime) {\n        setData(cacheRef.current.data);\n        setLastUpdate(new Date(cacheRef.current.timestamp));\n        return cacheRef.current.data;\n      }\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      abortController.current = new AbortController();\n      const fetchSignal = signal || abortController.current.signal;\n\n      const fetchUrl = await getUrl();\n      const response = await fetch(fetchUrl, {\n        method,\n        headers,\n        body: body ? JSON.stringify(body) : undefined,\n        signal: fetchSignal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const responseData = await response.json();\n      \n      if (unmountedRef.current) return;\n\n      setData(responseData);\n      setLastUpdate(new Date());\n      setPollCount((prev) => prev + 1);\n      retryCount.current = 0;\n\n      if (cache) {\n        cacheRef.current = {\n          data: responseData,\n          timestamp: Date.now(),\n        };\n      }\n\n      if (onSuccess) {\n        onSuccess(responseData);\n      }\n\n      if (stopCondition && stopCondition(responseData)) {\n        stop();\n      }\n\n      return responseData;\n    } catch (err) {\n      if (unmountedRef.current) return;\n      \n      const error = err instanceof Error ? err : new Error('Unknown error');\n      \n      if (error.name !== 'AbortError') {\n        setError(error);\n        \n        if (onError) {\n          onError(error);\n        }\n\n        if (stopOnError) {\n          stop();\n        } else if (retryOnError && retryCount.current < maxRetries) {\n          retryCount.current++;\n          setTimeout(() => {\n            if (!unmountedRef.current) {\n              fetchData();\n            }\n          }, retryDelay * retryCount.current);\n        }\n      }\n    } finally {\n      if (!unmountedRef.current) {\n        setLoading(false);\n      }\n    }\n  }, [\n    getUrl,\n    method,\n    headers,\n    body,\n    signal,\n    cache,\n    cacheTime,\n    onSuccess,\n    onError,\n    stopCondition,\n    stopOnError,\n    retryOnError,\n    maxRetries,\n    retryDelay,\n  ]);\n\n  const start = useCallback(() => {\n    if (unmountedRef.current || isPolling) return;\n\n    setIsPolling(true);\n    setPollCount(0);\n    retryCount.current = 0;\n\n    const poll = async () => {\n      await fetchData();\n      \n      if (!unmountedRef.current && isPolling) {\n        pollingTimer.current = setTimeout(poll, interval);\n      }\n    };\n\n    if (immediate) {\n      poll();\n    } else {\n      pollingTimer.current = setTimeout(poll, interval);\n    }\n  }, [fetchData, interval, immediate, isPolling]);\n\n  const stop = useCallback(() => {\n    setIsPolling(false);\n    \n    if (pollingTimer.current) {\n      clearTimeout(pollingTimer.current);\n    }\n    \n    if (abortController.current) {\n      abortController.current.abort();\n    }\n  }, []);\n\n  const retry = useCallback(() => {\n    retryCount.current = 0;\n    fetchData();\n  }, [fetchData]);\n\n  useEffect(() => {\n    unmountedRef.current = false;\n\n    if (enabled) {\n      start();\n    }\n\n    return () => {\n      unmountedRef.current = true;\n      stop();\n    };\n  }, [enabled]);\n\n  return {\n    data,\n    error,\n    loading,\n    start,\n    stop,\n    isPolling,\n    lastUpdate,\n    pollCount,\n    retry,\n  };\n}","import { useState, useCallback, useEffect } from 'react';\nimport type { UseAsyncReturn, AsyncState } from '../types';\n\n/**\n * Handles async operations with loading, error, and data states\n * @param asyncFunction - async function to execute\n * @param immediate - execute immediately\n * @returns { execute, loading, error, data }\n */\nexport function useAsync<T = any>(\n  asyncFunction: () => Promise<T>,\n  immediate: boolean = true\n): UseAsyncReturn<T> {\n  const [state, setState] = useState<AsyncState<T>>({\n    loading: immediate,\n    error: null,\n    data: null,\n  });\n\n  const execute = useCallback(async () => {\n    setState({ loading: true, error: null, data: null });\n\n    try {\n      const data = await asyncFunction();\n      setState({ loading: false, error: null, data });\n    } catch (error) {\n      setState({ loading: false, error: error as Error, data: null });\n    }\n  }, [asyncFunction]);\n\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, ...state };\n}\n","import { useState, useCallback, useEffect, useRef } from 'react';\nimport type { UseFetchReturn, AsyncState, FetchOptions } from '../types';\n\n/**\n * Fetches data from URL\n * @param url - URL to fetch\n * @param options - fetch options\n * @returns { data, loading, error, refetch }\n */\nexport function useFetch<T = any>(\n  url: string,\n  options?: FetchOptions\n): UseFetchReturn<T> {\n  const [state, setState] = useState<AsyncState<T>>({\n    data: null,\n    loading: options?.immediate !== false,\n    error: null,\n  });\n\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  const fetchData = useCallback(async () => {\n    setState(prev => ({ ...prev, loading: true, error: null }));\n\n    // Cancel previous request\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n\n    // Create new AbortController\n    abortControllerRef.current = new AbortController();\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: abortControllerRef.current.signal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setState({ data, loading: false, error: null });\n    } catch (error) {\n      if ((error as Error).name !== 'AbortError') {\n        setState({ data: null, loading: false, error: error as Error });\n      }\n    }\n  }, [url, options]);\n\n  useEffect(() => {\n    if (options?.immediate !== false) {\n      fetchData();\n    }\n\n    return () => {\n      abortControllerRef.current?.abort();\n    };\n  }, [fetchData, options?.immediate]);\n\n  return { ...state, refetch: fetchData };\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  x: number;\n  y: number;\n}\n\ninterface UseMeasureOptions {\n  debounce?: number;\n  scroll?: boolean;\n  resize?: boolean;\n  offsetSize?: boolean;\n}\n\ntype UseMeasureReturn<T extends HTMLElement> = [\n  (node: T | null) => void,\n  Dimensions,\n  T | null\n];\n\nconst defaultDimensions: Dimensions = {\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  x: 0,\n  y: 0,\n};\n\nexport function useMeasure<T extends HTMLElement = HTMLElement>(\n  options: UseMeasureOptions = {}\n): UseMeasureReturn<T> {\n  const {\n    debounce = 0,\n    scroll = true,\n    resize = true,\n    offsetSize = false,\n  } = options;\n\n  const [dimensions, setDimensions] = useState<Dimensions>(defaultDimensions);\n  const [node, setNode] = useState<T | null>(null);\n  \n  const observerRef = useRef<ResizeObserver | null>(null);\n  const rafRef = useRef<number>();\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const measure = useCallback(() => {\n    if (!node) return;\n\n    const rect = node.getBoundingClientRect();\n    \n    const newDimensions: Dimensions = {\n      width: offsetSize ? node.offsetWidth : rect.width,\n      height: offsetSize ? node.offsetHeight : rect.height,\n      top: rect.top,\n      left: rect.left,\n      bottom: rect.bottom,\n      right: rect.right,\n      x: rect.x,\n      y: rect.y,\n    };\n\n    setDimensions(prevDimensions => {\n      if (\n        prevDimensions.width !== newDimensions.width ||\n        prevDimensions.height !== newDimensions.height ||\n        prevDimensions.top !== newDimensions.top ||\n        prevDimensions.left !== newDimensions.left ||\n        prevDimensions.bottom !== newDimensions.bottom ||\n        prevDimensions.right !== newDimensions.right ||\n        prevDimensions.x !== newDimensions.x ||\n        prevDimensions.y !== newDimensions.y\n      ) {\n        return newDimensions;\n      }\n      return prevDimensions;\n    });\n  }, [node, offsetSize]);\n\n  const measureWithDebounce = useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    if (debounce > 0) {\n      timeoutRef.current = setTimeout(() => {\n        measure();\n      }, debounce);\n    } else {\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n      rafRef.current = requestAnimationFrame(() => {\n        measure();\n      });\n    }\n  }, [measure, debounce]);\n\n  const ref = useCallback((newNode: T | null) => {\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n      observerRef.current = null;\n    }\n\n    if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    setNode(newNode);\n\n    if (!newNode) {\n      setDimensions(defaultDimensions);\n      return;\n    }\n\n    measure();\n\n    if (typeof ResizeObserver !== 'undefined') {\n      observerRef.current = new ResizeObserver((entries) => {\n        if (entries.length > 0) {\n          measureWithDebounce();\n        }\n      });\n      observerRef.current.observe(newNode);\n    }\n  }, [measure, measureWithDebounce]);\n\n  useEffect(() => {\n    if (!node) return;\n\n    const handleScroll = scroll ? measureWithDebounce : undefined;\n    const handleResize = resize ? measureWithDebounce : undefined;\n\n    if (handleScroll) {\n      window.addEventListener('scroll', handleScroll, { passive: true });\n      if (node.parentElement) {\n        node.parentElement.addEventListener('scroll', handleScroll, { passive: true });\n      }\n    }\n\n    if (handleResize) {\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => {\n      if (handleScroll) {\n        window.removeEventListener('scroll', handleScroll);\n        if (node.parentElement) {\n          node.parentElement.removeEventListener('scroll', handleScroll);\n        }\n      }\n\n      if (handleResize) {\n        window.removeEventListener('resize', handleResize);\n      }\n    };\n  }, [node, scroll, resize, measureWithDebounce]);\n\n  useEffect(() => {\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return [ref, dimensions, node];\n}","import { useCallback, useEffect, useRef } from 'react';\n\ninterface ScrollLockOptions {\n  autoLock?: boolean;\n  lockTarget?: HTMLElement | (() => HTMLElement | null);\n  preserveScrollBarGap?: boolean;\n}\n\ninterface ScrollLockReturn {\n  lock: () => void;\n  unlock: () => void;\n  toggle: () => void;\n  isLocked: boolean;\n}\n\nconst IS_SERVER = typeof window === 'undefined';\n\nexport function useScrollLock(options: ScrollLockOptions = {}): ScrollLockReturn {\n  const {\n    autoLock = false,\n    lockTarget,\n    preserveScrollBarGap = true,\n  } = options;\n\n  const scrollBarWidth = useRef<number>(0);\n  const targetElement = useRef<HTMLElement | null>(null);\n  const originalStyles = useRef<{\n    overflow?: string;\n    paddingRight?: string;\n  }>({});\n  const isLockedRef = useRef(false);\n\n  const getScrollBarWidth = useCallback(() => {\n    if (IS_SERVER) return 0;\n    \n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll';\n    outer.style.msOverflowStyle = 'scrollbar';\n    document.body.appendChild(outer);\n\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n\n    const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode?.removeChild(outer);\n\n    return scrollbarWidth;\n  }, []);\n\n  const getTargetElement = useCallback((): HTMLElement => {\n    if (lockTarget) {\n      if (typeof lockTarget === 'function') {\n        return lockTarget() || document.body;\n      }\n      return lockTarget;\n    }\n    return document.body;\n  }, [lockTarget]);\n\n  const lock = useCallback(() => {\n    if (IS_SERVER || isLockedRef.current) return;\n\n    const target = getTargetElement();\n    targetElement.current = target;\n\n    const hasScrollbar = target === document.body \n      ? window.innerWidth > document.documentElement.clientWidth\n      : target.scrollHeight > target.clientHeight;\n\n    originalStyles.current = {\n      overflow: target.style.overflow,\n      paddingRight: target.style.paddingRight,\n    };\n\n    target.style.overflow = 'hidden';\n\n    if (preserveScrollBarGap && hasScrollbar) {\n      if (scrollBarWidth.current === 0) {\n        scrollBarWidth.current = getScrollBarWidth();\n      }\n\n      const currentPaddingRight = parseInt(\n        window.getComputedStyle(target).paddingRight || '0',\n        10\n      );\n\n      target.style.paddingRight = `${currentPaddingRight + scrollBarWidth.current}px`;\n    }\n\n    isLockedRef.current = true;\n\n    if (target === document.body) {\n      document.documentElement.style.overflow = 'hidden';\n    }\n  }, [getTargetElement, preserveScrollBarGap, getScrollBarWidth]);\n\n  const unlock = useCallback(() => {\n    if (IS_SERVER || !isLockedRef.current || !targetElement.current) return;\n\n    const target = targetElement.current;\n\n    if (originalStyles.current.overflow !== undefined) {\n      target.style.overflow = originalStyles.current.overflow;\n    }\n\n    if (originalStyles.current.paddingRight !== undefined) {\n      target.style.paddingRight = originalStyles.current.paddingRight;\n    }\n\n    if (target === document.body) {\n      document.documentElement.style.overflow = '';\n    }\n\n    isLockedRef.current = false;\n    originalStyles.current = {};\n  }, []);\n\n  const toggle = useCallback(() => {\n    if (isLockedRef.current) {\n      unlock();\n    } else {\n      lock();\n    }\n  }, [lock, unlock]);\n\n  useEffect(() => {\n    if (autoLock) {\n      lock();\n    }\n\n    return () => {\n      unlock();\n    };\n  }, [autoLock]);\n\n  return {\n    lock,\n    unlock,\n    toggle,\n    isLocked: isLockedRef.current,\n  };\n}","import { useEffect, useRef, MutableRefObject } from 'react';\n\n/**\n * Alternative implementation of click outside detection\n * @param onClickAway - callback when clicked away\n * @returns ref to attach to element\n */\nexport function useClickAway<T extends HTMLElement = HTMLElement>(\n  onClickAway: (event: MouseEvent | TouchEvent) => void\n): MutableRefObject<T | null> {\n  const ref = useRef<T | null>(null);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent | TouchEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        onClickAway(event);\n      }\n    };\n\n    document.addEventListener('click', handleClick);\n    document.addEventListener('touchstart', handleClick);\n\n    return () => {\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('touchstart', handleClick);\n    };\n  }, [onClickAway]);\n\n  return ref;\n}\n","import { useEffect, RefObject } from 'react';\n\n/**\n * Detects clicks outside of the specified element\n * @param ref - element ref\n * @param handler - callback when clicked outside\n */\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent) => void\n): void {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import { useState, useCallback, useEffect, useRef, MutableRefObject } from 'react';\n\n/**\n * Tracks hover state of an element\n * @returns [ref, isHovering]\n */\nexport function useHover<T extends HTMLElement = HTMLElement>(): [\n  MutableRefObject<T | null>,\n  boolean\n] {\n  const [isHovering, setIsHovering] = useState<boolean>(false);\n  const ref = useRef<T | null>(null);\n\n  const handleMouseEnter = useCallback(() => setIsHovering(true), []);\n  const handleMouseLeave = useCallback(() => setIsHovering(false), []);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    element.addEventListener('mouseenter', handleMouseEnter);\n    element.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      element.removeEventListener('mouseenter', handleMouseEnter);\n      element.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [handleMouseEnter, handleMouseLeave]);\n\n  return [ref, isHovering];\n}\n","import { useState, useEffect, RefObject } from 'react';\nimport type { IntersectionObserverOptions } from '../types';\n\n/**\n * Observes element intersection with viewport\n * @param ref - element ref\n * @param options - IntersectionObserver options\n * @returns IntersectionObserverEntry | undefined\n */\nexport function useIntersectionObserver(\n  ref: RefObject<Element>,\n  options?: IntersectionObserverOptions\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  useEffect(() => {\n    if (!ref.current || !('IntersectionObserver' in window)) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => setEntry(entry),\n      options\n    );\n\n    observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref, options?.threshold, options?.root, options?.rootMargin]);\n\n  return entry;\n}\n","import { useState, useEffect } from 'react';\n\n/**\n * Tracks window dimensions\n * @returns { width, height }\n */\nexport function useWindowSize(): { width: number; height: number } {\n  const [windowSize, setWindowSize] = useState<{ width: number; height: number }>({\n    width: typeof window !== 'undefined' ? window.innerWidth : 0,\n    height: typeof window !== 'undefined' ? window.innerHeight : 0,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n","import { useState, useEffect } from 'react';\n\n/**\n * Tracks if a media query matches\n * @param query - media query string\n * @returns boolean indicating if query matches\n */\nexport function useMediaQuery(query: string): boolean {\n  const [matches, setMatches] = useState<boolean>(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  });\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(query);\n    const handleChange = (event: MediaQueryListEvent) => {\n      setMatches(event.matches);\n    };\n\n    // Set initial value\n    setMatches(mediaQuery.matches);\n\n    // Modern browsers\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleChange);\n      return () => mediaQuery.removeEventListener('change', handleChange);\n    } \n    // Legacy browsers\n    else {\n      mediaQuery.addListener(handleChange);\n      return () => mediaQuery.removeListener(handleChange);\n    }\n  }, [query]);\n\n  return matches;\n}\n","import { useEffect, useRef, RefObject } from 'react';\n\n/**\n * Adds event listener to element\n * @param eventName - event name\n * @param handler - event handler\n * @param element - target element (default: window)\n * @param options - event listener options\n */\nexport function useEventListener<K extends keyof WindowEventMap>(\n  eventName: K,\n  handler: (event: WindowEventMap[K]) => void,\n  element?: RefObject<HTMLElement> | null,\n  options?: boolean | AddEventListenerOptions\n): void {\n  const savedHandler = useRef<(event: WindowEventMap[K]) => void>();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const targetElement: HTMLElement | Window = element?.current || window;\n    if (!(targetElement && targetElement.addEventListener)) {\n      return;\n    }\n\n    const eventListener = (event: Event) => savedHandler.current?.(event as WindowEventMap[K]);\n\n    targetElement.addEventListener(eventName, eventListener, options);\n\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener, options);\n    };\n  }, [eventName, element, options]);\n}\n","import { useState, useEffect } from 'react';\n\n/**\n * Debounces a value\n * @param value - value to debounce\n * @param delay - delay in milliseconds\n * @returns debounced value\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { useState, useEffect, useRef } from 'react';\n\n/**\n * Throttles a value\n * @param value - value to throttle\n * @param limit - throttle limit in milliseconds\n * @returns throttled value\n */\nexport function useThrottle<T>(value: T, limit: number): T {\n  const [throttledValue, setThrottledValue] = useState<T>(value);\n  const lastRan = useRef<number>(Date.now());\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (Date.now() - lastRan.current >= limit) {\n        setThrottledValue(value);\n        lastRan.current = Date.now();\n      }\n    }, limit - (Date.now() - lastRan.current));\n\n    return () => clearTimeout(handler);\n  }, [value, limit]);\n\n  return throttledValue;\n}\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\n/**\n * Toggles a boolean value\n * @param initialValue - initial boolean value\n * @returns [value, toggle, setValue]\n */\nexport function useToggle(\n  initialValue: boolean = false\n): [boolean, () => void, Dispatch<SetStateAction<boolean>>] {\n  const [value, setValue] = useState<boolean>(initialValue);\n\n  const toggle = useCallback(() => {\n    setValue(v => !v);\n  }, []);\n\n  return [value, toggle, setValue];\n}\n","import { useState, useCallback } from 'react';\nimport type { UseCounterReturn } from '../types';\n\n/**\n * Counter with increment, decrement, reset, and set functions\n * @param initialValue - initial counter value\n * @returns { count, increment, decrement, reset, set }\n */\nexport function useCounter(initialValue: number = 0): UseCounterReturn {\n  const [count, setCount] = useState<number>(initialValue);\n\n  const increment = useCallback(() => setCount(x => x + 1), []);\n  const decrement = useCallback(() => setCount(x => x - 1), []);\n  const reset = useCallback(() => setCount(initialValue), [initialValue]);\n  const set = useCallback((value: number) => setCount(value), []);\n\n  return { count, increment, decrement, reset, set };\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * Sets a timeout\n * @param callback - function to call\n * @param delay - delay in milliseconds (null to cancel)\n */\nexport function useTimeout(callback: () => void, delay: number | null): void {\n  const savedCallback = useRef<() => void>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay !== null) {\n      const id = setTimeout(() => savedCallback.current?.(), delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * Sets up an interval\n * @param callback - function to call\n * @param delay - delay in milliseconds (null to pause)\n */\nexport function useInterval(callback: () => void, delay: number | null): void {\n  const savedCallback = useRef<() => void>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay !== null) {\n      const id = setInterval(() => savedCallback.current?.(), delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport type { StorageValue, StorageSetValue } from '../types';\n\n/**\n * Syncs state with localStorage\n * @param key - localStorage key\n * @param initialValue - initial value\n * @returns [value, setValue, removeValue]\n */\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [StorageValue<T>, StorageSetValue<T>, () => void] {\n  // Get from localStorage then parse stored json or return initialValue\n  const readValue = useCallback((): StorageValue<T> => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? (JSON.parse(item) as T) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  }, [initialValue, key]);\n\n  const [storedValue, setStoredValue] = useState<StorageValue<T>>(readValue);\n\n  // Return a wrapped version of useState's setter function that persists the new value to localStorage\n  const setValue: StorageSetValue<T> = useCallback(\n    (value) => {\n      if (typeof window === 'undefined') {\n        console.warn(`Tried setting localStorage key \"${key}\" even though environment is not a client`);\n      }\n\n      try {\n        const newValue = value instanceof Function ? value(storedValue) : value;\n        window.localStorage.setItem(key, JSON.stringify(newValue));\n        setStoredValue(newValue);\n        window.dispatchEvent(new Event('local-storage'));\n      } catch (error) {\n        console.warn(`Error setting localStorage key \"${key}\":`, error);\n      }\n    },\n    [key, storedValue]\n  );\n\n  // Remove value from localStorage\n  const removeValue = useCallback(() => {\n    if (typeof window === 'undefined') {\n      console.warn(`Tried removing localStorage key \"${key}\" even though environment is not a client`);\n    }\n\n    try {\n      window.localStorage.removeItem(key);\n      setStoredValue(null);\n      window.dispatchEvent(new Event('local-storage'));\n    } catch (error) {\n      console.warn(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key]);\n\n  useEffect(() => {\n    setStoredValue(readValue());\n  }, [readValue]);\n\n  // Listen for changes in other tabs/windows\n  useEffect(() => {\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === key && e.newValue !== null) {\n        setStoredValue(JSON.parse(e.newValue) as T);\n      }\n    };\n\n    const handleLocalStorageChange = () => {\n      setStoredValue(readValue());\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('local-storage', handleLocalStorageChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('local-storage', handleLocalStorageChange);\n    };\n  }, [key, readValue]);\n\n  return [storedValue, setValue, removeValue];\n}\n","import { useRef, useEffect } from 'react';\n\n/**\n * Returns the previous value of a variable\n * @param value - current value\n * @returns previous value\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { useState, useCallback, useEffect } from 'react';\n\n/**\n * Detects when a specific key is pressed\n * @param targetKey - key to detect\n * @returns boolean indicating if key is pressed\n */\nexport function useKeyPress(targetKey: string): boolean {\n  const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n  const downHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    },\n    [targetKey]\n  );\n\n  const upHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [downHandler, upHandler]);\n\n  return keyPressed;\n}\n","import { useRef } from 'react';\n\n/**\n * Detects if it's the first render\n * @returns boolean indicating if it's the first render\n */\nexport function useIsFirstRender(): boolean {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n    return true;\n  }\n\n  return isFirst.current;\n}\n","import { useEffect, DependencyList } from 'react';\nimport { useIsFirstRender } from './useIsFirstRender';\n\n/**\n * useEffect that skips the first render\n * @param effect - effect function\n * @param deps - dependencies\n */\nexport function useUpdateEffect(effect: () => void | (() => void), deps?: DependencyList): void {\n  const isFirst = useIsFirstRender();\n\n  useEffect(() => {\n    if (!isFirst) {\n      return effect();\n    }\n  }, deps);\n}\n"]}